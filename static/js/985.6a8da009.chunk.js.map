{"version":3,"file":"static/js/985.6a8da009.chunk.js","mappings":"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","sources":["components/TimetableArr/TimetableArr.tsx"],"sourcesContent":["import React, { useRef, useEffect, lazy } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { useDebugState } from \"use-named-state\"\nimport axios from \"axios\"\nimport { getDuration } from \"../helpers/helpers\"\nimport ProductsFilter from \"../ProductsFilter/ProductsFilter\"\nconst Input = lazy(() => import(\"../Input/Input\"))\nconst Select = lazy(() => import(\"../Select/Select\"))\nconst Button = lazy(() => import(\"../Button/Button\"))\nconst Filter = lazy(() => import(\"../Filter/Filter\"))\nconst StopBody = lazy(() => import(\"../StopBody/StopBody\"))\n/* eslint-disable react-hooks/exhaustive-deps */\n\ntype Location = {\n\ttype: \"location\"\n\tlatitude: number\n\tlongitude: number\n}\n\ntype Remarks = {\n\tcode: string | undefined\n\tsummary: string | null | undefined\n\ttext: string\n\ttype: string\n\tvalidFrom: string | undefined\n\tvalidUntil: string | undefined\n}[]\n\ntype Operator = {\n  type: \"operator\",\n  id: string,\n  name: string\n}\n\ntype LINE_A = {\n\tcolor: {\n\t\tfg: string\n\t\tbg: string\n\t}\n\texpress: boolean\n\tfahrtNr: string\n\tid: string\n\tmetro: boolean\n\tmode: string\n\tname: string\n\tnight: boolean\n\tnr: number\n\toperator: Operator\n\tproduct: \"regional\" | \"suburban\" | \"subway\"\n\ttype: string\n}\n\ntype LINE_B = {\n\texpress: boolean\n\tfahrtNr: string\n\tid: string\n\tmetro: boolean\n\tmode: string\n\tname: string\n\tnight: boolean\n\tnr: number\n\toperator: Operator\n\tproduct: \"express\" | \"tram\" | \"bus\" | \"ferry\"\n\ttype: string\n}\n\ntype Dataset = {\n\tcancelled: boolean | undefined\n\tcurrentTripPosition: Location\n\tdelay: number | null\n\tdirection: string | null\n\tformerScheduledWhen?: string\n\tline: LINE_A | LINE_B\n\tplannedPlatform?: string\n\tplannedWhen?: string\n\tplatform?: number | string\n\tprognosedPlatform?: string\n\tprognosisType: string | null | undefined\n\tprovenance: string | null\n\tremarks: Remarks\n\tscheduledWhen?: string\n\tstop: {\n\t\tid: string\n\t\tname: string\n\t\tlocation: Location\n\t}\n\ttripId: string\n\twhen?: string\n}\n\ntype Stop = {\n\tid: string\n\tname: string\n\ttype?: string\n}\n\ntype Options = {\n\texpress?: boolean\n\tregional?: boolean\n\tsuburban?: boolean\n\tsubway?: boolean\n\ttram?: boolean\n\tbus?: boolean\n\tferry?: boolean\n}\n\ntype Data = Dataset[]\n\nexport default function TimetableArr() {\n\tconst [selection, setSelection] = useDebugState<Stop[]>(\"selection\", [])\n\tconst [stop, setStop] = useDebugState<Stop>(\"stop\", {\n\t\tid: \"\",\n\t\tname: \"\",\n\t\ttype: \"\",\n\t})\n\tconst [data, setData] = useDebugState<Data>(\"data\", [])\n\tconst [date, setDate] = useDebugState<string>(\"date\", \"\")\n\tconst [viewData, setViewData] = useDebugState<Data>(\"viewData\", [])\n\tconst [error, setError] = useDebugState<any>(\"error\", null)\n\tconst [express, setExpress] = useDebugState<boolean>(\"express\", true)\n\tconst [regional, setRegional] = useDebugState<boolean>(\"regional\", true)\n\tconst [suburban, setSuburban] = useDebugState<boolean>(\"suburban\", true)\n\tconst [subway, setSubway] = useDebugState<boolean>(\"subway\", true)\n\tconst [tram, setTram] = useDebugState<boolean>(\"tram\", true)\n\tconst [bus, setBus] = useDebugState<boolean>(\"bus\", true)\n\tconst [ferry, setFerry] = useDebugState<boolean>(\"ferry\", true)\n\tconst params = useParams()\n\tconst navigate = useNavigate()\n\tuseEffect(() => {\n\t\tasync function findInitialStop() {\n\t\t\tif (\n\t\t\t\tparams.hasOwnProperty(\"id\") &&\n\t\t\t\ttypeof params.id === \"string\" &&\n\t\t\t\tparams.id.length === 9\n\t\t\t) {\n\t\t\t\ttry {\n\t\t\t\t\t// const stationUrl = `https://station-api-jade.vercel.app/?id=${params.id}`\n\t\t\t\t\tconst stationUrl = `https://vbb-rest.vercel.app/stops/${params.id}?language=de`\n\t\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\tstationUrl\n\t\t\t\t\t)\n\t\t\t\t\tconst station = await response.json()\n\t\t\t\t\tconst { name } = await station\n\t\t\t\t\tnavigate(`/arrivals/${params.id}`)\n\t\t\t\t\tsetStop(station)\n\t\t\t\t\tgetData(params.id, name, {})\n\t\t\t\t\tdocument.title = navigator.language.startsWith(\"de\")\n\t\t\t\t\t\t? `Ankünfte an ${name}`\n\t\t\t\t\t\t: `Arrivals at ${name}`\n\t\t\t\t\tconst stopSelection = [station]\n\t\t\t\t\tsetSelection(stopSelection)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.debug(error)\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tparams.hasOwnProperty(\"id\") &&\n\t\t\t\ttypeof params.id === 'string' &&\n\t\t\t\tparams.id.length === 12\n\t\t\t) {\n\t\t\t\ttry {\n\t\t\t\t\tconst modifiedId = `${params.id.slice(0,1)}${params.id.slice(-8)}`\n\t\t\t\t\t// const stationUrl = `https://station-api-jade.vercel.app/?id=${modifiedId}`\n\t\t\t\t\tconst stationUrl = `https://vbb-rest.vercel.app/stops/${modifiedId}?language=de`\n\t\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\tstationUrl\n\t\t\t\t\t)\n\t\t\t\t\tconst station = await response.json()\n\t\t\t\t\tconst { name } = await station\n\t\t\t\t\tnavigate(`/arrivals/${modifiedId}`)\n\t\t\t\t\tsetStop(station)\n\t\t\t\t\tgetData(modifiedId, name, {})\n\t\t\t\t\tdocument.title = navigator.language.startsWith(\"de\")\n\t\t\t\t\t\t? `Ankünfte an ${name}`\n\t\t\t\t\t\t: `Arrivals at ${name}`\n\t\t\t\t\tconst stopSelection = [station]\n\t\t\t\t\tsetSelection(stopSelection)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.debug(error)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst initialId = \"900100011\"\n\t\t\t\t\t// const stationUrl =\n\t\t\t\t\t// `https://station-api-jade.vercel.app/?id=${initialId}`\n\t\t\t\t\tconst stationUrl = `https://vbb-rest.vercel.app/stops/${initialId}?language=de`\n\t\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\tstationUrl\n\t\t\t\t\t)\n\t\t\t\t\tconst station = await response.json()\n\t\t\t\t\tconst { name: initialName } = await station\n\t\t\t\t\tnavigate(`/arrivals/${initialId}`)\n\t\t\t\t\tsetStop(station)\n\t\t\t\t\tgetData(initialId, initialName, {})\n\t\t\t\t\tdocument.title = navigator.language.startsWith(\"de\")\n\t\t\t\t\t\t? `Ankünfte an ${initialName}`\n\t\t\t\t\t\t: `Arrivals at ${initialName}`\n\t\t\t\t\tconst stopSelection = [station]\n\t\t\t\t\tsetSelection(stopSelection)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.debug(error)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfindInitialStop()\n\t}, [])\n\tconst inputField = useRef<HTMLInputElement>(null)\n\tconst filterField = useRef<HTMLInputElement>(null)\n\tconst filterSelector = useRef<HTMLSelectElement>(null)\n\tconst filterData = () => {\n\t\tconst fieldCurrent = filterField.current as HTMLInputElement\n\t\tconst { value: fieldValue } = fieldCurrent\n\t\tconst filterValues = fieldValue.split(\" \")\n\t\tconst selectorCurrent = filterSelector.current as HTMLSelectElement\n\t\tconst { value: filterMode } = selectorCurrent\n\t\tif (filterValues.length > 0) {\n\t\t\tif (filterMode === \"OR\") {\n\t\t\t\tfilterOr(filterValues)\n\t\t\t} else {\n\t\t\t\tfilterAnd(filterValues)\n\t\t\t}\n\t\t} else {\n\t\t\tnoFilters()\n\t\t}\n\t}\n\tconst filterOr = (filterValues: string[]) => {\n\t\tconst filteredData = data.filter((arrival) => {\n\t\t\tlet decider = false\n\t\t\tif (arrival.hasOwnProperty(\"provenance\") && arrival.provenance) {\n\t\t\t\tfor (let i = 0; i < filterValues.length; i++) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tarrival.line.name\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(filterValues[i].toLowerCase()) ||\n\t\t\t\t\t\tarrival.provenance\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(filterValues[i].toLowerCase())\n\t\t\t\t\t) {\n\t\t\t\t\t\tdecider = true\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn decider\n\t\t})\n\t\tsetViewData(filteredData)\n\t}\n\tconst filterAnd = (filterValues: string[]) => {\n\t\tconst filteredData = data.filter((arrival) => {\n\t\t\tlet decider = true\n\t\t\tif (arrival.hasOwnProperty(\"provenance\") && arrival.provenance) {\n\t\t\t\tfor (let i = 0; i < filterValues.length; i++) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tarrival.line.name\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(filterValues[i].toLowerCase()) ||\n\t\t\t\t\t\tarrival.provenance\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(filterValues[i].toLowerCase())\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdecider = false\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn decider\n\t\t})\n\t\tsetViewData(filteredData)\n\t}\n\tconst noFilters = () => {\n\t\tsetViewData(data)\n\t}\n\tconst getStopSelection = async (event: {\n\t\tkey: string\n\t\ttarget: { value: string }\n\t}) => {\n\t\tconst searchValue = event.target.value\n\t\ttry {\n\t\t\tif (searchValue.length > 4) {\n\t\t\t\t// const getStopsUrl = `https://station-api-jade.vercel.app/?station=${searchValue}`\n\t\t\t\tconst getStopsUrl = `https://vbb-rest.vercel.app/locations?query=${searchValue}&results=15&fuzzy=true&stops=true&addresses=false&poi=false&language=de&linesOfStops=true`\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\tgetStopsUrl\n\t\t\t\t)\n\t\t\t\tconst data = await response.json()\n\t\t\t\tconst newData = [stop, ...data]\n\t\t\t\tsetSelection(newData)\n\t\t\t} else {\n\t\t\t\tsetSelection([stop])\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.debug(error)\n\t\t}\n\t}\n\tconst setCurrStop = (currStop: Stop) => {\n\t\tsetStop(currStop)\n\t}\n\tconst getData = async (id: string, name: string, options: Options) => {\n\t\ttry {\n\t\t\tconst type = name.startsWith(\"Berlin\") ? \"BLN\" : \"BBG\"\n\t\t\tconst duration = getDuration(type)\n\t\t\tlet lang = \"de\"\n\t\t\tconst browserLang = navigator.language\n\t\t\tif (browserLang.startsWith(\"de\")) {\n\t\t\t\tlang = \"de\"\n\t\t\t} else {\n\t\t\t\tlang = \"en\"\n\t\t\t}\n\t\t\t// const url =\n\t\t\t// `https://sklinkusch-vbbmicro.vercel.app/?station=${id}&duration=${duration}&mode=arr&language=${lang}`\n\t\t\tconst url = `https://vbb-rest.vercel.app/stops/${id}/arrivals?language=${lang}&duration=${duration}&express=${typeof options.express === 'boolean' ? options.express.toString() : express.toString()}&regional=${typeof options.regional === 'boolean' ? options.regional.toString() : regional.toString()}&suburban=${typeof options.suburban === 'boolean' ? options.suburban.toString() : suburban.toString()}&subway=${typeof options.subway === 'boolean' ? options.subway.toString() : subway.toString()}&tram=${typeof options.tram === 'boolean' ? options.tram.toString() : tram.toString()}&bus=${typeof options.bus === 'boolean' ? options.bus.toString() : bus.toString()}&ferry=${typeof options.ferry === 'boolean' ? options.ferry.toString() : ferry.toString()}`\n\t\t\tconst response = await axios.get(url)\n\t\t\tconst { data: resData, status } = await response\n\t\t\tif (status === 500 || status !== 200) {\n\t\t\t\tsetError(`HTTP status code: ${status}`)\n\t\t\t\tsetData([])\n\t\t\t} else {\n\t\t\t\tconst myDate = new Date().toLocaleString(\"de-DE\", {\n\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\tmonth: \"2-digit\",\n\t\t\t\t\tday: \"2-digit\",\n\t\t\t\t\thour: \"2-digit\",\n\t\t\t\t\tminute: \"2-digit\",\n\t\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t\t})\n\t\t\t\tconst { arrivals } = resData\n\t\t\t\tdocument.title =\n\t\t\t\t\tlang === \"de\" ? `Ankünfte an ${name}` : `Arrivals at ${name}`\n\t\t\t\tsetDate(myDate)\n\t\t\t\tsetData(arrivals)\n\t\t\t\tsetViewData(arrivals)\n\t\t\t\tsetError(null)\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.debug(error)\n\t\t}\n\t}\n\tconst handleChange = (currentStop: Stop) => {\n\t\tsetCurrStop(currentStop)\n\t\tconst { id: myStopId, name: currentStopName } = currentStop\n\t\tgetData(myStopId, currentStopName, {})\n\t\tconst inputCurrent = inputField.current as HTMLInputElement\n\t\tinputCurrent.value = \"\"\n\t\tconst filterFieldCurrent = filterField.current as HTMLInputElement\n\t\tfilterFieldCurrent.value = \"\"\n\t\tconst filterSelectorCurrent = filterSelector.current as HTMLSelectElement\n\t\tfilterSelectorCurrent.value = \"OR\"\n\t}\n\tconst handleSubmit = () => {\n\t\tgetData(stop.id, stop.name, {})\n\t\tconst inputCurrent = inputField.current as HTMLInputElement\n\t\tinputCurrent.value = \"\"\n\t\tconst filterFieldCurrent = filterField.current as HTMLInputElement\n\t\tfilterFieldCurrent.value = \"\"\n\t\tconst filterSelectorCurrent = filterSelector.current as HTMLSelectElement\n\t\tfilterSelectorCurrent.value = \"OR\"\n\t}\n\t// useEffect(() => {\n\t//   getData(stop);\n\t// }, []);\n\treturn (\n\t\t<div className=\"timetable\">\n\t\t\t<Input filterStops={getStopSelection} inputField={inputField} />\n\t\t\t<Select\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tselection={selection}\n\t\t\t\tstop={stop}\n\t\t\t\tmode=\"arr\"\n\t\t\t/>\n\t\t\t<Button handleSubmit={handleSubmit} />\n\t\t\t<Filter\n\t\t\t\tfilterField={filterField}\n\t\t\t\tfilterSelector={filterSelector}\n\t\t\t\tfilterData={filterData}\n\t\t\t\tmode=\"arr\"\n\t\t\t/>\n\t\t\t<ProductsFilter products={[ express, regional, suburban, subway, tram, bus, ferry ]} productSetters={[ setExpress, setRegional, setSuburban, setSubway, setTram, setBus, setFerry ]} getData={(options: Options) => getData(stop.id, stop.name, options)} />\n\t\t\t<StopBody\n\t\t\t\tstop={stop}\n\t\t\t\tdata={viewData}\n\t\t\t\terror={error}\n\t\t\t\tdate={date}\n\t\t\t\tmode=\"arr\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n"],"names":["Input","lazy","Select","Button","Filter","StopBody","TimetableArr","_useDebugState","useDebugState","_useDebugState2","_slicedToArray","selection","setSelection","_useDebugState3","id","name","type","_useDebugState4","stop","setStop","_useDebugState5","_useDebugState6","data","setData","_useDebugState7","_useDebugState8","date","setDate","_useDebugState9","_useDebugState10","viewData","setViewData","_useDebugState11","_useDebugState12","error","setError","_useDebugState13","_useDebugState14","express","setExpress","_useDebugState15","_useDebugState16","regional","setRegional","_useDebugState17","_useDebugState18","suburban","setSuburban","_useDebugState19","_useDebugState20","subway","setSubway","_useDebugState21","_useDebugState22","tram","setTram","_useDebugState23","_useDebugState24","bus","setBus","_useDebugState25","_useDebugState26","ferry","setFerry","params","useParams","navigate","useNavigate","useEffect","_findInitialStop","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stationUrl","response","station","_yield$station","modifiedId","_stationUrl","_response","_station","_yield$_station","_name","initialId","_stationUrl2","_response2","_station2","_yield$_station2","initialName","wrap","_context","prev","next","hasOwnProperty","length","concat","fetch","sent","json","getData","document","title","navigator","language","startsWith","t0","console","debug","slice","t1","t2","apply","arguments","findInitialStop","inputField","useRef","filterField","filterSelector","filterOr","filterValues","filteredData","filter","arrival","decider","provenance","i","line","toLowerCase","includes","filterAnd","noFilters","getStopSelection","_ref","_callee2","event","searchValue","getStopsUrl","_data","newData","_context2","target","value","_toConsumableArray","_x","_ref2","_callee3","options","duration","lang","browserLang","url","_yield$response","resData","status","myDate","arrivals","_context3","getDuration","toString","axios","Date","toLocaleString","year","month","day","hour","minute","timeZone","_x2","_x3","_x4","_jsxs","className","children","_jsx","filterStops","handleChange","currentStop","myStopId","currentStopName","current","mode","handleSubmit","filterData","split","filterMode","ProductsFilter","products","productSetters"],"sourceRoot":""}