{"version":3,"file":"static/js/742.2522ea44.chunk.js","mappings":"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","sources":["components/Departure.js"],"sourcesContent":["/** @jsxImportSource theme-ui */\nimport { Fragment, lazy } from \"react\";\nconst Time = lazy(() => import(\"./Time\"));\nconst Product = lazy(() => import(\"./Product\"));\nconst Barrier = lazy(() => import(\"./Barrier\"));\nconst Bike = lazy(() => import(\"./Bike\"));\nconst Warning = lazy(() => import(\"./Warning\"));\nconst Status = lazy(() => import(\"./Status\"));\nconst Warntext = lazy(() => import(\"./Warntext\"));\nconst Stattext = lazy(() => import(\"./Stattext\"));\n\nconst Departure = props => {\n  const getDelay = (delay, cancelled) => {\n    if (delay != null) {\n      return Math.floor(delay / 60);\n    } else if (cancelled) {\n      return \"X\";\n    } else {\n      return \"?\";\n    }\n  };\n  const getPlanTime = (realtime, delay) => {\n    let hours = Number(realtime.substr(0, 2));\n    let minutes = Number(realtime.substr(3, 2));\n    minutes -= delay;\n    if (minutes < 0) {\n      minutes += 60;\n      hours -= 1;\n    }\n    if (minutes > 59) {\n      minutes -= 60;\n      hours += 1;\n    }\n    if (hours < 0) {\n      hours += 24;\n    }\n    if (hours > 23) {\n      hours -= 24;\n    }\n    let hourString = hours < 10 ? `0${hours}` : `${hours}`;\n    let minuteString = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    return `${hourString}:${minuteString}`;\n  };\n  const getTime = timestamp => {\n    if (timestamp != null) {\n      return timestamp.substr(11, 5);\n    } else {\n      return \"\";\n    }\n  };\n  let delayMin;\n  if (props.dep.cancelled) {\n    delayMin = getDelay(props.dep.delay, props.dep.cancelled);\n  } else {\n    delayMin = getDelay(props.dep.delay, false);\n  }\n  let realtime = getTime(props.dep.when);\n  let plantime;\n  if (props.dep.when != null && props.dep.delay != null) {\n    plantime = getPlanTime(realtime, delayMin);\n  } else if (props.dep.when != null && delayMin === \"?\") {\n    plantime = realtime;\n    realtime = \"\";\n  } else {\n    plantime =\n      getTime(props.dep.formerScheduledWhen) ||\n      getTime(props.dep.scheduledWhen);\n  }\n  const { line, direction, remarks, platform } = props.dep;\n  const { name: linenumber } = line;\n  return (\n    <Fragment>\n      <div className=\"row\" key={props.dep.tripId} sx={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n        <Time time={plantime} class=\"plantime\" />\n        <Time time={realtime} class=\"realtime\" />\n        <div className=\"delay\" sx={{ textAlign: [\"center\", \"center\", \"right\"], gridColumn: [\"17 / span 8\", \"5 / span 2\"]}}>{delayMin}</div>\n        <Product line={line} />\n        <div className=\"line\" sx={{ textAlign: \"left\", gridColumn: [\"2 / span 6\", \"8 / span 3\"] }}>{linenumber}</div>\n        <div className=\"direction\" sx={{ textAlign: \"left\", gridColumn: [\"8 / span 13\", \"11 / span 8\"] }}>{direction}</div>\n        <div className=\"platform\" sx={{ textAlign: \"center\", gridColumn: [\"22 / span 3\", \"19 / span 2\"] }}>{platform}</div>\n        <Barrier remarks={remarks} />\n        <Bike remarks={remarks} />\n        <Warning remarks={remarks} />\n        <Status remarks={remarks} />\n      </div>\n      <div className=\"row row-add\" key={`add:${props.dep.tripId}`} sx={{ display: \"grid\", gridTemplateColumns: \"repeat(24, 1fr)\", borderBottom: [\"1px solid #ccc\", \"1px solid #ccc\",\"none\"] }}>\n        <Warntext remarks={remarks} />\n        <Stattext remarks={remarks} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Departure;\n"],"names":["Time","lazy","Product","Barrier","Bike","Warning","Status","Warntext","Stattext","props","delayMin","getDelay","delay","cancelled","Math","floor","getTime","timestamp","substr","dep","plantime","realtime","when","hours","Number","minutes","hourString","minuteString","getPlanTime","formerScheduledWhen","scheduledWhen","line","direction","remarks","platform","linenumber","name","Fragment","className","sx","display","gridTemplateColumns","time","class","textAlign","gridColumn","tripId","borderBottom"],"sourceRoot":""}