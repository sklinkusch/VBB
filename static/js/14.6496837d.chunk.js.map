{"version":3,"sources":["components/Warning.js"],"names":["Warning","_ref","remarks","formatTime","timestamp","undefined","dateArray","substr","split","_dateArray","Object","_development_stefan_react_vbb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","year","month","day","time","concat","formatText","text","textWithoutLinks","replaceLinks","includeSpecialChars","item","test","replace","textForm","warnings","filter","remark","type","formattedWarnings","map","warning","from","validFrom","until","validUntil","summary","join","theme_ui__WEBPACK_IMPORTED_MODULE_2__","className","sx","_development_stefan_react_vbb_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","textAlign","gridColumn","length","title"],"mappings":"6HAyEeA,UAtEC,SAAAC,GAAiB,IAAdC,EAAcD,EAAdC,QAEXC,EAAa,SAACC,GAClB,GAAkB,OAAdA,QAAoCC,IAAdD,EAAyB,CACjD,IAAME,EAAYF,EAAUG,OAAO,EAAG,IAAIC,MAAM,KADCC,EAAAC,OAAAC,EAAA,EAAAD,CAEtBJ,EAFsB,GAE1CM,EAF0CH,EAAA,GAEpCI,EAFoCJ,EAAA,GAE7BK,EAF6BL,EAAA,GAG3CM,EAAOX,EAAUG,OAAO,GAAI,GAClC,SAAAS,OAAUF,EAAV,KAAAE,OAAiBH,EAAjB,KAAAG,OAA0BJ,EAA1B,MAAAI,OAAmCD,GAErC,OAAO,MAEHE,EAAa,SAACC,GAClB,IAAMC,EAAmBC,EAAaF,GAEtC,OADsBG,EAAoBF,IAGtCC,EAAe,SAACE,GACpB,MAAI,0BAA0BC,KAAKD,GAE/B,sEAAsEC,KACpED,GAIKA,EAAKE,QADK,2EACa,WAE9B,2DAA2DD,KAAKD,GAGzDA,EAAKE,QADK,gEACa,WACrB,wCAAwCD,KAAKD,GAE/CA,EAAKE,QADK,6CACa,WAGvBF,EAAKE,QADI,+BACa,WAG1BF,GAEHD,EAAsB,SAACH,GAC3B,IACIO,EADkBP,EAAKM,QAAQ,aAAc,KAClBA,QAAQ,QAAS,KAEhD,OADAC,EAAWA,EAASD,QAAQ,QAAS,MAGjCE,EAAWxB,EAAQyB,OAAO,SAACC,GAAD,MAA4B,YAAhBA,EAAOC,OAC7CC,EAAoBJ,EACvBK,IAAI,SAACC,GACJ,IAAMC,EAAO9B,EAAW6B,EAAQE,WAC1BC,EAAQhC,EAAW6B,EAAQI,YAC3BC,EAAUpB,EAAWe,EAAQK,SAC7BnB,EAAOD,EAAWe,EAAQd,MAChC,SAAAF,OAAUiB,GAAc,GAAxB,OAAAjB,OAAgCmB,GAAgB,GAAhD,MAAAnB,OACEqB,GAAoB,GADtB,MAAArB,OAEKE,GAAc,MAEpBoB,KAAK,MACR,OACE5B,OAAA6B,EAAA,EAAA7B,CAAA,OAAK8B,UAAU,UAAUC,GAAE/B,OAAAgC,EAAA,EAAAhC,CAAA,GA1Dd,CAAEiC,UAAW,SAAUC,WAAY,CAAC,cAAe,kBA2D7DlB,EAASmB,OAAS,EACjBnC,OAAA6B,EAAA,EAAA7B,CAAA,QACE8B,UAAU,8BACVM,MAAOhB,IAEP","file":"static/js/14.6496837d.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\n\nconst Warning = ({ remarks }) => {\n  const styles = { textAlign: \"center\", gridColumn: [\"13 / span 6\", \"23 / span 1\"]}\n  const formatTime = (timestamp) => {\n    if (timestamp !== null && timestamp !== undefined) {\n      const dateArray = timestamp.substr(0, 10).split(\"-\")\n      const [year, month, day] = dateArray\n      const time = timestamp.substr(11, 5)\n      return `${day}.${month}.${year}, ${time}`\n    }\n    return null\n  }\n  const formatText = (text) => {\n    const textWithoutLinks = replaceLinks(text)\n    const formattedText = includeSpecialChars(textWithoutLinks)\n    return formattedText\n  }\n  const replaceLinks = (item) => {\n    if (/<a.*href=\".*\".*>.*<\\/a>/.test(item)) {\n      if (\n        /<a.*href=\".*\" target=\"_blank\" rel=\"noopener noreferrer[ ]*\">.*<\\/a>/.test(\n          item\n        )\n      ) {\n        const pattern1 = /<a.*href=\"(.*)\" target=\"_blank\" rel=\"noopener noreferrer[ ]*\">(.*)<\\/a>/g\n        return item.replace(pattern1, \"$2 ($1)\")\n      } else if (\n        /<a.*href=\".*\" target=\"_blank\" rel=\"noopener[ ]*\">.*<\\/a>/.test(item)\n      ) {\n        const pattern2 = /<a.*href=\"(.*)\" target=\"_blank\" rel=\"noopener[ ]*\">(.*)<\\/a>/g\n        return item.replace(pattern2, \"$2 ($1)\")\n      } else if (/<a.*href?\".*\" target=\"_blank\">.*<\\/a>/.test(item)) {\n        const pattern3 = /<a.*href=\"(.*)\" target=\"_blank\">(.*)<\\/a>/g\n        return item.replace(pattern3, \"$2 ($1)\")\n      } else {\n        const pattern = /<a.*href=\"(.*)\".*>(.*)<\\/a>/g\n        return item.replace(pattern, \"$2 ($1)\")\n      }\n    }\n    return item\n  }\n  const includeSpecialChars = (text) => {\n    let textWODoubleBrs = text.replace(/(\\[br\\]*)/g, \" \")\n    let textForm = textWODoubleBrs.replace(/&lt;/g, \"<\")\n    textForm = textForm.replace(/&gt;/g, \">\")\n    return textForm\n  }\n  const warnings = remarks.filter((remark) => remark.type === \"warning\")\n  const formattedWarnings = warnings\n    .map((warning) => {\n      const from = formatTime(warning.validFrom)\n      const until = formatTime(warning.validUntil)\n      const summary = formatText(warning.summary)\n      const text = formatText(warning.text)\n      return `${from ? from : \"\"} - ${until ? until : \"\"}: ${\n        summary ? summary : \"\"\n      }, ${text ? text : \"\"}`\n    })\n    .join(\"\\n\")\n  return (\n    <div className=\"warning\" sx={{ ...styles }}>\n      {warnings.length > 0 ? (\n        <span\n          className=\"fas fa-exclamation-triangle\"\n          title={formattedWarnings}\n        />\n      ) : null}\n    </div>\n  )\n}\n\nexport default Warning\n"],"sourceRoot":""}