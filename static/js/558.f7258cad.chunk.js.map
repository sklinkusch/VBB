{"version":3,"file":"static/js/558.f7258cad.chunk.js","mappings":"yPAmBaA,EAAa,SAACC,GACzB,GAAkB,OAAdA,QAAoCC,IAAdD,EAAyB,CACjD,IAAME,EAAYF,EAAUG,UAAU,EAAG,IAAIC,MAAM,KACnD,UAA2BF,EAA3B,GAAOG,EAAP,KAAaC,EAAb,KAAoBC,EAApB,KACMC,EAAOR,EAAUG,UAAU,GAAI,IACrC,MAAM,GAAN,OAAUI,EAAV,YAAiBD,EAAjB,YAA0BD,EAA1B,aAAmCG,GAErC,OAAO,MAGIC,EAAa,SAACC,GACzB,MAAoB,kBAATA,EACaC,EAAoBD,GAGrC,IAGIC,EAAsB,SAACD,GAClC,IACIE,EADkBF,EAAKG,QAAQ,aAAc,KAClBA,QAAQ,QAAS,KAEhD,OADAD,EAAWA,EAASC,QAAQ,QAAS,MAkCvC,UA9BiB,SAACC,GAChB,IAAMC,EAAWD,EAAME,QAAQC,QAAO,SAACC,GAAD,MAA4B,YAAhBA,EAAOC,QACzD,OAAIJ,EAASK,OAAS,GAElB,eAAKC,UAAU,WAAWC,GAAI,CAAEC,WAAY,eAA5C,SACGR,EAASS,KAAI,SAACC,EAASC,GACtB,IAAQC,EAAyCF,EAAzCE,UAAWC,EAA8BH,EAA9BG,WAAYC,EAAkBJ,EAAlBI,QAASnB,EAASe,EAATf,KAClCoB,EAAO/B,EAAW4B,GAClBI,EAAQhC,EAAW6B,GACnBI,EAAmBvB,EAAWoB,GAC9BI,EAAgBxB,EAAWC,GAC3BwB,EACM,sBAAVH,EAAA,WACOI,EAAAA,EAAAA,GAAU,SADjB,YAC6BL,GAD7B,UAEOA,EAFP,cAEiBC,GACnB,OACE,aAAeT,GAAI,CAAEc,UAAW,WAAhC,WACE,gBAAMf,UAAU,iCAChB,0BAAOa,EAAP,SACA,gBAAMG,wBAAyB,CAACC,OAAQN,KAH1C,KAIE,gBAAMK,wBAAyB,CAACC,OAAQL,OAJlCP,QAWX","sources":["components/Warntext/Warntext.tsx"],"sourcesContent":["/** @jsxImportSource theme-ui */\nimport getLocale from \"../Locales/getLocale\"\n\ntype Remarks = {\n  summary: string | null | undefined,\n  text: string | undefined,\n  type: string | undefined,\n  validFrom: string | undefined,\n  validUntil: string | undefined\n}[]\n\ntype Props = {\n  remarks: Remarks\n}\n\ntype Timestamp = string | null | undefined\n\ntype Text = string | null | undefined\n\nexport const formatTime = (timestamp: Timestamp) => {\n  if (timestamp !== null && timestamp !== undefined) {\n    const dateArray = timestamp.substring(0, 10).split(\"-\")\n    const [year, month, day] = dateArray\n    const time = timestamp.substring(11, 16)\n    return `${day}.${month}.${year}, ${time}`\n  }\n  return null\n}\n\nexport const formatText = (text: Text) => {\n  if (typeof text === 'string') {\n    const formattedText = includeSpecialChars(text)\n    return formattedText\n  }\n  return \"\"\n}\n\nexport const includeSpecialChars = (text: string) => {\n  let textWODoubleBrs = text.replace(/(\\[br\\]*)/g, \" \")\n  let textForm = textWODoubleBrs.replace(/&lt;/g, \"<\")\n  textForm = textForm.replace(/&gt;/g, \">\")\n  return textForm\n}\n\nconst Warntext = (props: Props) => {\n  const warnings = props.remarks.filter((remark) => remark.type === \"warning\")\n  if (warnings.length > 0) {\n    return (\n      <div className=\"warntext\" sx={{ gridColumn: \"2 / span 22\"}}>\n        {warnings.map((warning, index) => {\n          const { validFrom, validUntil, summary, text } = warning\n          const from = formatTime(validFrom)\n          const until = formatTime(validUntil)\n          const summaryFormatted = formatText(summary)\n          const textFormatted = formatText(text)\n          const limits =\n            until === \"31.12.2049, 23:59\"\n              ? `${getLocale(\"since\")} ${from}`\n              : `${from} - ${until}`\n          return (\n            <p key={index} sx={{ textAlign: \"justify\" }}>\n              <span className=\"fas fa-exclamation-triangle\" />\n              <span>{limits}: </span>\n              <span dangerouslySetInnerHTML={{__html: summaryFormatted}} />,\n              <span dangerouslySetInnerHTML={{__html: textFormatted}} />\n            </p>\n          )\n        })}\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Warntext\n"],"names":["formatTime","timestamp","undefined","dateArray","substring","split","year","month","day","time","formatText","text","includeSpecialChars","textForm","replace","props","warnings","remarks","filter","remark","type","length","className","sx","gridColumn","map","warning","index","validFrom","validUntil","summary","from","until","summaryFormatted","textFormatted","limits","getLocale","textAlign","dangerouslySetInnerHTML","__html"],"sourceRoot":""}