{"version":3,"file":"static/js/964.dd402a5d.chunk.js","mappings":"uJAQe,SAASA,EAASC,GAAwB,IAAtBC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MACvC,OACEC,EAAAA,EAAAA,IAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,IAAA,OAAKC,UAAU,aAAaC,GAAI,CAAEC,WAAY,cAAeJ,SAAEJ,KAC/DK,EAAAA,EAAAA,IAAA,OAAKC,UAAU,cAAcC,GAAI,CAAEE,UAAW,OAAQD,WAAY,eAAgBJ,SAAEH,MAG1F,C,+GCXe,SAASS,IACtB,OACER,EAAAA,EAAAA,IAAA,OAAKI,UAAU,SAASC,GAAI,CAAEI,QAAS,CAAC,OAAQ,OAAQ,QAASC,oBAAqB,iBAAkBC,OAAQ,kBAAmBC,MAAO,MAAOC,OAAQ,mBAAoBC,aAAc,QAASZ,SAAA,EAClMC,EAAAA,EAAAA,IAAA,MAAIE,GAAI,CAAEC,WAAY,eAAgBJ,UAAEa,EAAAA,EAAAA,GAAU,aAClDZ,EAAAA,EAAAA,IAACP,EAAAA,EAAS,CACRE,MAAMiB,EAAAA,EAAAA,GAAU,aAChBhB,OAAOgB,EAAAA,EAAAA,GAAU,oBAEnBZ,EAAAA,EAAAA,IAACP,EAAAA,EAAS,CACRE,MAAMiB,EAAAA,EAAAA,GAAU,QAChBhB,OAAOgB,EAAAA,EAAAA,GAAU,eAEnBZ,EAAAA,EAAAA,IAACP,EAAAA,EAAS,CAACE,MAAMiB,EAAAA,EAAAA,GAAU,SAAUhB,OAAOgB,EAAAA,EAAAA,GAAU,gBACtDZ,EAAAA,EAAAA,IAACP,EAAAA,EAAS,CAACE,MAAMiB,EAAAA,EAAAA,GAAU,QAAShB,OAAOgB,EAAAA,EAAAA,GAAU,eACrDZ,EAAAA,EAAAA,IAACP,EAAAA,EAAS,CAACE,MAAMiB,EAAAA,EAAAA,GAAU,aAAchB,OAAOgB,EAAAA,EAAAA,GAAU,oBAC1DZ,EAAAA,EAAAA,IAACP,EAAAA,EAAS,CACRE,MAAMK,EAAAA,EAAAA,IAAA,QAAMC,UAAU,sBACtBL,OAAOgB,EAAAA,EAAAA,GAAU,kBAEnBZ,EAAAA,EAAAA,IAACP,EAAAA,EAAS,CACRE,MAAMK,EAAAA,EAAAA,IAAA,QAAMC,UAAU,mBACtBL,OAAOgB,EAAAA,EAAAA,GAAU,WAEnBZ,EAAAA,EAAAA,IAACP,EAAAA,EAAS,CACRE,MAAMK,EAAAA,EAAAA,IAAA,QAAMC,UAAU,gCACtBL,OAAOgB,EAAAA,EAAAA,GAAU,gBAEnBZ,EAAAA,EAAAA,IAACP,EAAAA,EAAS,CACRE,MAAMK,EAAAA,EAAAA,IAAA,QAAMC,UAAU,iBACtBL,OAAOgB,EAAAA,EAAAA,GAAU,iBAIzB,C,qICyEe,SAASC,IACvB,IAAAC,GAAkCC,EAAAA,EAAAA,IAAsB,YAAa,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjEI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA8CL,EAAAA,EAAAA,IAAwB,kBAAmB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArFE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAwBT,EAAAA,EAAAA,IAAoB,OAAQ,CACnDU,GAAI,GACJC,KAAM,GACNC,KAAM,KACLC,GAAAX,EAAAA,EAAAA,GAAAO,EAAA,GAJKK,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAKpBG,GAAoChB,EAAAA,EAAAA,IAAoB,aAAc,CAAEU,GAAI,IAAKC,KAAM,SAAKC,KAAM,KAAKK,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAhGE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwBpB,EAAAA,EAAAA,IAAoB,OAAQ,IAAGqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAAhDE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAwBxB,EAAAA,EAAAA,IAAsB,OAAQ,IAAGyB,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAAlDE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0B5B,EAAAA,EAAAA,IAAmB,QAAS,MAAK6B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAApDE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BhC,EAAAA,EAAAA,IAAuB,WAAW,GAAKiC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAA9DE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAgCpC,EAAAA,EAAAA,IAAuB,YAAY,GAAKqC,GAAAnC,EAAAA,EAAAA,GAAAkC,EAAA,GAAjEE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgCxC,EAAAA,EAAAA,IAAuB,YAAY,GAAKyC,GAAAvC,EAAAA,EAAAA,GAAAsC,EAAA,GAAjEE,EAAQD,EAAA,GAAEE,GAAWF,EAAA,GAC5BG,IAA4B5C,EAAAA,EAAAA,IAAuB,UAAU,GAAK6C,IAAA3C,EAAAA,EAAAA,GAAA0C,GAAA,GAA3DE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,IAAwBhD,EAAAA,EAAAA,IAAuB,QAAQ,GAAKiD,IAAA/C,EAAAA,EAAAA,GAAA8C,GAAA,GAArDE,GAAID,GAAA,GAAEE,GAAOF,GAAA,GACpBG,IAAsBpD,EAAAA,EAAAA,IAAuB,OAAO,GAAKqD,IAAAnD,EAAAA,EAAAA,GAAAkD,GAAA,GAAlDE,GAAGD,GAAA,GAAEE,GAAMF,GAAA,GAClBG,IAA0BxD,EAAAA,EAAAA,IAAuB,SAAS,GAAKyD,IAAAvD,EAAAA,EAAAA,GAAAsD,GAAA,GAAxDE,GAAKD,GAAA,GAAEE,GAAQF,GAAA,GAChBG,IAASC,EAAAA,EAAAA,MACTC,IAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACqB,SAAAC,IA0E7B,OA1E6BA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA9B,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA9D,EAAA+D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlB,EAAAA,EAAAA,KAAAmB,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAEE7B,GAAO8B,eAAe,OACD,kBAAd9B,GAAOlD,IACO,IAArBkD,GAAOlD,GAAGiF,OAAY,CAAAJ,EAAAE,KAAA,SAK4C,OAL5CF,EAAAC,KAAA,EAKflB,EAAU,qCAAAsB,OAAwChC,GAAOlD,GAAE,gBAAA6E,EAAAE,KAAA,EAC1CI,MACtBvB,GACA,OAFa,OAARC,EAAQgB,EAAAO,KAAAP,EAAAE,KAAA,EAGQlB,EAASwB,OAAM,OAAxB,OAAPvB,EAAOe,EAAAO,KAAAP,EAAAE,KAAA,GACUjB,EAAO,QAAAC,EAAAc,EAAAO,KAAtBnF,EAAI8D,EAAJ9D,KACRmD,GAAS,eAAD8B,OAAgBhC,GAAOlD,KAC/BK,EAAQyD,GACRwB,GAAQpC,GAAOlD,GAAIC,EAAM,CAAC,GAC1BsF,SAASC,MAAQC,UAAUC,SAASC,WAAW,MAAK,gBAAAT,OAClCjF,GAAI,mBAAAiF,OACDjF,GAErBP,EADsB,CAACoE,IACIe,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAE3BgB,QAAQC,MAAKjB,EAAAe,IAAO,QAAAf,EAAAE,KAAA,qBAGrB7B,GAAO8B,eAAe,OACD,kBAAd9B,GAAOlD,IACO,KAArBkD,GAAOlD,GAAGiF,OAAa,CAAAJ,EAAAE,KAAA,SAM4C,OAN5CF,EAAAC,KAAA,GAGhBd,EAAU,GAAAkB,OAAMhC,GAAOlD,GAAG+F,MAAM,EAAG,IAAEb,OAAGhC,GAAOlD,GAAG+F,OAAO,IAGzDnC,EAAU,qCAAAsB,OAAwClB,EAAU,gBAAAa,EAAAE,KAAA,GAC3CI,MACtBvB,GACA,QAFa,OAARC,EAAQgB,EAAAO,KAAAP,EAAAE,KAAA,GAGQlB,EAASwB,OAAM,QAAxB,OAAPvB,EAAOe,EAAAO,KAAAP,EAAAE,KAAA,GACUjB,EAAO,QAAAM,EAAAS,EAAAO,KAAtBnF,EAAImE,EAAJnE,KACRmD,GAAS,eAAD8B,OAAgBlB,IACxB3D,EAAQyD,GACRwB,GAAQtB,EAAY/D,EAAM,CAAC,GAC3BsF,SAASC,MAAQC,UAAUC,SAASC,WAAW,MAAK,gBAAAT,OACjCjF,GAAI,mBAAAiF,OACDjF,GAEtBP,EADsB,CAACoE,IACIe,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmB,GAAAnB,EAAA,UAE3BgB,QAAQC,MAAKjB,EAAAmB,IAAO,QAAAnB,EAAAE,KAAA,iBAM6C,OAN7CF,EAAAC,KAAA,GAMdlB,EAAU,qCAAAsB,OAFVZ,EAAY,YAE+C,gBAAAO,EAAAE,KAAA,GAC1CI,MACtBvB,GACA,QAFa,OAARC,EAAQgB,EAAAO,KAAAP,EAAAE,KAAA,GAGQlB,EAASwB,OAAM,QAAxB,OAAPvB,EAAOe,EAAAO,KAAAP,EAAAE,KAAA,GACuBjB,EAAO,QAAAY,EAAAG,EAAAO,KAA7BT,EAAWD,EAAjBzE,KACRmD,GAAS,eAAD8B,OAAgBZ,IACxBjE,EAAQyD,GACRwB,GAAQhB,EAAWK,EAAa,CAAC,GACjCY,SAASC,MAAQC,UAAUC,SAASC,WAAW,MAAK,gBAAAT,OACjCP,GAAW,mBAAAO,OACRP,GAEtBjF,EADsB,CAACoE,IACIe,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAoB,GAAApB,EAAA,UAE3BgB,QAAQC,MAAKjB,EAAAoB,IAAO,yBAAApB,EAAAzE,OAAA,GAAAuD,EAAA,oCAGtBuC,MAAA,KAAAC,UAAA,EA3Ee,WACc5C,EAAA2C,MAAC,KAADC,UAAA,CA2E9BC,EACD,GAAG,IACH,IAAMC,IAAaC,EAAAA,EAAAA,QAAyB,MACtCC,IAAgBD,EAAAA,EAAAA,QAAyB,MACzCE,GAAgB,eAAAvI,GAAAuF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA+C,EAAOC,GAG/B,IAAAC,EAAAC,EAAA/C,EAAAgD,EAAAC,EAAA,OAAArD,EAAAA,EAAAA,KAAAmB,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OACsC,GAAhC4B,EAAcD,EAAMM,OAAOC,MAAKF,EAAAjC,KAAA,IAEjC6B,EAAY1B,QAAU,GAAC,CAAA8B,EAAAhC,KAAA,SAEoD,OAAxE6B,EAAW,+CAAA1B,OAAkDyB,EAAW,6FAAAI,EAAAhC,KAAA,EACvDI,MACtByB,GACA,OAFa,OAAR/C,EAAQkD,EAAA3B,KAAA2B,EAAAhC,KAAA,EAGKlB,EAASwB,OAAM,OAA5BzE,EAAImG,EAAA3B,KACJ0B,EAAO,CAAI1G,GAAI8E,QAAAgC,EAAAA,EAAAA,GAAKtG,IAC1BlB,EAAaoH,GAAQC,EAAAhC,KAAA,iBAErBrF,EAAa,CAACU,IAAM,QAAA2G,EAAAhC,KAAA,iBAAAgC,EAAAjC,KAAA,GAAAiC,EAAAnB,GAAAmB,EAAA,SAGrBlB,QAAQC,MAAKiB,EAAAnB,IAAO,yBAAAmB,EAAA3G,OAAA,GAAAqG,EAAA,mBAErB,gBArBqBU,GAAA,OAAAlJ,EAAAiI,MAAA,KAAAC,UAAA,KAsBhBiB,GAAsB,eAAAC,GAAA7D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4D,EAAOZ,GAGrC,IAAAC,EAAAY,EAAAX,EAAA/C,EAAA2D,EAAAV,EAAA,OAAArD,EAAAA,EAAAA,KAAAmB,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAGqD,GAF/C4B,EAAcD,EAAMM,OAAOC,MAAKQ,EAAA3C,KAAA,EAE/ByC,EAAc,CAAEvH,GAAI,IAAKC,KAAM,SAAKC,KAAM,MAC5CyG,EAAY1B,QAAU,GAAC,CAAAwC,EAAA1C,KAAA,SAEoD,OAAxE6B,EAAW,+CAAA1B,OAAkDyB,EAAW,6FAAAc,EAAA1C,KAAA,EACvDI,MACtByB,GACA,OAFa,OAAR/C,EAAQ4D,EAAArC,KAAAqC,EAAA1C,KAAA,GAGMlB,EAASwB,OAAM,QAA7BmC,EAAKC,EAAArC,KACL0B,EAA4B,MAAlBtG,EAAWR,GAAU,CAChCuH,EAAa/G,GAAU0E,QAAAgC,EAAAA,EAAAA,GAAKM,IAAK,CACjCD,GAAWrC,QAAAgC,EAAAA,EAAAA,GAAKM,IACrB1H,EAAmBgH,GAAQW,EAAA1C,KAAA,iBACC,MAAlBvE,EAAWR,GAErBF,EADgB,CAAEyH,EAAa/G,IAG/BV,EAAmB,CAACyH,IACpB,QAAAE,EAAA1C,KAAA,iBAAA0C,EAAA3C,KAAA,GAAA2C,EAAA7B,GAAA6B,EAAA,SAED5B,QAAQC,MAAK2B,EAAA7B,IAAO,yBAAA6B,EAAArH,OAAA,GAAAkH,EAAA,mBAErB,gBA3B2BI,GAAA,OAAAL,EAAAnB,MAAA,KAAAC,UAAA,KA+BtBwB,GAAU,SAAC1H,GAChB,OAAIA,EAAK0F,WAAW,WAGhB1F,EAAK2H,SAAS,aAGd3H,EAAK2H,SAAS,uBALV,MAQD,KACR,EACMtC,GAAO,eAAAuC,GAAArE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoE,EAAO9H,EAAYC,EAAc8H,GAAgB,IAAA7H,EAAA8H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxE,EAAAyE,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjF,EAAAA,EAAAA,KAAAmB,MAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,OAuBssB,OAvBtsB4D,EAAA7D,KAAA,EAEzD5E,EAAOyH,GAAQ1H,GACf+H,GAAWY,EAAAA,EAAAA,GAAY1I,GACzB+H,EAAO,KACLC,EAAczC,UAAUC,SAE7BuC,EADGC,EAAYvC,WAAW,MACnB,KAEA,KAEFwC,EAAYJ,EAAQI,UACD,MAAtBJ,EAAQI,UACPU,SAASd,EAAQI,UAAU,IAC3B,KACiB,MAAlB3H,EAAWR,GACT6I,SAASrI,EAAWR,GAAI,IACxB,KACCoI,EAAwC,kBAAdD,EAAsB,cAAAjD,OACrCiD,GACd,GAGGE,EAAG,qCAAAnD,OAAwClF,EAAE,yBAAAkF,OAAwB+C,EAAI,cAAA/C,OAAa8C,EAAQ,aAAA9C,OAAuC,mBAApB6C,EAAQvG,QAAwBuG,EAAQvG,QAAQsH,WAAatH,EAAQsH,WAAU,cAAA5D,OAAyC,mBAArB6C,EAAQnG,SAAyBmG,EAAQnG,SAASkH,WAAalH,EAASkH,WAAU,cAAA5D,OAAyC,mBAArB6C,EAAQ/F,SAAyB+F,EAAQ/F,SAAS8G,WAAa9G,EAAS8G,WAAU,YAAA5D,OAAqC,mBAAnB6C,EAAQ3F,OAAuB2F,EAAQ3F,OAAO0G,WAAa1G,GAAO0G,WAAU,UAAA5D,OAAiC,mBAAjB6C,EAAQvF,KAAqBuF,EAAQvF,KAAKsG,WAAatG,GAAKsG,WAAU,SAAA5D,OAA+B,mBAAhB6C,EAAQnF,IAAoBmF,EAAQnF,IAAIkG,WAAalG,GAAIkG,WAAU,WAAA5D,OAAmC,mBAAlB6C,EAAQ/E,MAAsB+E,EAAQ/E,MAAM8F,WAAa9F,GAAM8F,YAAU5D,OAAGkD,GAAgBO,EAAA5D,KAAA,GAC9uBI,MAAMkD,GAAI,QAAnB,OAARxE,EAAQ8E,EAAAvD,KAAAuD,EAAA5D,KAAA,GACUlB,EAAQ,QAAnB,OAAmByE,EAAAK,EAAAvD,KAAzBmD,EAAMD,EAANC,OAAMI,EAAA5D,KAAA,GACSlB,EAASwB,OAAM,QAA/BmD,EAAOG,EAAAvD,KACE,MAAXmD,GAA6B,MAAXA,GACrBlH,EAAS,qBAAD6D,OAAsBqD,IAC9B1H,EAAQ,MAEA4H,EAAeD,EAAfC,WACFC,GAAS,IAAIK,MAAOC,eAAe,QAAS,CACjDC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,SAAU,kBAEX/D,SAASC,MACC,OAATyC,EAAa,gBAAA/C,OAAmBjF,GAAI,mBAAAiF,OAAwBjF,GAC7DgB,EAAQyH,GACR7H,EAAQ4H,GAERpH,EAAS,OACTsH,EAAA5D,KAAA,iBAAA4D,EAAA7D,KAAA,GAAA6D,EAAA/C,GAAA+C,EAAA,SAED9C,QAAQC,MAAK6C,EAAA/C,IAAO,yBAAA+C,EAAAvI,OAAA,GAAA0H,EAAA,mBAErB,gBAlDYyB,EAAAC,EAAAC,GAAA,OAAA5B,EAAA3B,MAAA,KAAAC,UAAA,KAyEb,OACC/H,EAAAA,EAAAA,IAAA,OAAKI,UAAU,YAAYC,GAAI,CAAEiL,UAAW,QAASpL,SAAA,CACnD+H,KACA9H,EAAAA,EAAAA,IAACoL,EAAAA,EAAK,CAACC,YAAapD,GAAkBH,WAAYA,MAEnD9H,EAAAA,EAAAA,IAACsL,EAAAA,EAAM,CACNC,aA5BkB,SAACC,GAjErB1J,EAkEY0J,GACZ,IAAYC,EAAoCD,EAAxC/J,GAAoBiK,EAAoBF,EAA1B9J,KACtBqF,GAAQ0E,EAAUC,EAAiB,CAAC,GACf5D,GAAW6D,QACnBjD,MAAQ,EACtB,EAuBGxH,UAAWA,EACXW,KAAMA,EACN+J,KAAK,SAEN5L,EAAAA,EAAAA,IAAC6L,EAAAA,EAAM,CAACC,aAhBW,WACpB/E,GAAQlF,EAAKJ,GAAII,EAAKH,KAAM,CAAC,GACRoG,GAAW6D,QACnBjD,MAAQ,EACtB,KAaE7I,EAAAA,EAAAA,IAAA,OAAAE,SAAA,EACCC,EAAAA,EAAAA,IAAA,QAAME,GAAI,CAAEI,QAAS,eAAgByL,GAAI,SAAUC,UAAW,SAAUC,WAAY,KAAMlM,SAAC,SAC3FC,EAAAA,EAAAA,IAACoL,EAAAA,EAAK,CAACC,YAAaxC,GAAwBf,WAAYE,MACxDhI,EAAAA,EAAAA,IAACkM,EAAAA,EAAM,CAACX,aA9BgB,SAACC,GAC3BtJ,EAAcsJ,GACS,MAAnBA,EAAY/J,GACfsF,GAAQlF,EAAKJ,GAAII,EAAKH,KAAM,CAAEkI,UAAW4B,EAAY/J,KAErDsF,GAAQlF,EAAKJ,GAAII,EAAKH,KAAM,CAAC,GAENsG,GAAc2D,QACtBjD,MAAQ,EACzB,EAqB6CxH,UAAWI,EAAiBO,KAAMI,QAE7EjC,EAAAA,EAAAA,IAACmM,EAAAA,EAAc,CACdC,SACC,CACCnJ,EACAI,EACAI,EACAI,GACAI,GACAI,GACAI,IAGF4H,eACC,CACCnJ,EACAI,EACAI,GACAI,GACAI,GACAI,GACAI,IAGFqC,QAAS,SAACyC,GAAgB,OAAKzC,GAAQlF,EAAKJ,GAAII,EAAKH,KAAM8H,EAAQ,KAEpExJ,EAAAA,EAAAA,IAACsM,EAAAA,EAAQ,CACRzK,KAAMA,EACNQ,KAAMA,EACNQ,MAAOA,EACPJ,KAAMA,EACNmJ,KAAK,UAIT,C,aC3WA,MA9BA,WAeE,OACE/L,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACK,EAAS,KAQVL,EAAAA,EAAAA,KAACa,EAAS,MAGhB,C","sources":["components/Legendrow/Legendrow.tsx","components/LegendDep/LegendDep.tsx","components/Timetable/Timetable.tsx","pages/VBBDepartures.tsx"],"sourcesContent":["/** @jsxImportSource theme-ui */\nimport React from \"react\";\n\ntype Props = {\n  left: any,\n  right: string\n}\n\nexport default function Legendrow({left, right}: Props) {\n  return (\n    <React.Fragment>\n      <div className=\"legendleft\" sx={{ gridColumn: \"1 / span 4\" }}>{left}</div>\n      <div className=\"legendright\" sx={{ textAlign: \"left\", gridColumn: \"5 / span 20\" }}>{right}</div>\n    </React.Fragment>\n  );\n}\n","/** @jsxImportSource theme-ui */\nimport Legendrow from \"../Legendrow/Legendrow\";\nimport getLocale from \"../Locales/getLocale\";\n\nexport default function LegendDep() {\n  return (\n    <div className=\"legend\" sx={{ display: [\"none\", \"none\", \"grid\"], gridTemplateColumns: \"repeat(24,1fr)\", border: \"2px solid black\", width: \"70%\", margin: \"0 auto 40px auto\", borderRadius: \"10px\" }}>\n      <h3 sx={{ gridColumn: \"1 / span 24\" }}>{getLocale(\"legend\")}</h3>\n      <Legendrow\n        left={getLocale(\"scheduled\")}\n        right={getLocale(\"scheduledDesc\")}\n      />\n      <Legendrow\n        left={getLocale(\"real\")}\n        right={getLocale(\"realDesc\")}\n      />\n      <Legendrow left={getLocale(\"delay\")} right={getLocale(\"delayDesc\")} />\n      <Legendrow left={getLocale(\"line\")} right={getLocale(\"lineDesc\")} />\n      <Legendrow left={getLocale(\"direction\")} right={getLocale(\"directionDesc\")} />\n      <Legendrow\n        left={<span className=\"fas fa-wheelchair\" />}\n        right={getLocale(\"barrierfree\")}\n      />\n      <Legendrow\n        left={<span className=\"fas fa-bicycle\" />}\n        right={getLocale(\"bike\")}\n      />\n      <Legendrow\n        left={<span className=\"fas fa-exclamation-triangle\" />}\n        right={getLocale(\"attention\")}\n      />\n      <Legendrow\n        left={<span className=\"fas fa-times\" />}\n        right={getLocale(\"cancelled\")}\n      />\n    </div>\n  );\n}\n","/** @jsxImportSource theme-ui */\nimport { useRef, useEffect } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { useDebugState } from \"use-named-state\"\n// import axios from \"axios\"\nimport { getDuration } from \"../helpers/helpers\"\nimport Input from \"../Input/Input\"\nimport Select from \"../Select/Select\"\nimport Button from \"../Button/Button\"\nimport Filter from \"../Filter/Filter\"\nimport ProductsFilter from \"../ProductsFilter/ProductsFilter\"\nimport StopBody from \"../StopBody/StopBody\"\n/* eslint-disable react-hooks/exhaustive-deps */\n\ntype Location = {\n\ttype: \"location\"\n\tlatitude: number\n\tlongitude: number\n}\n\ntype Remarks = {\n\tcode: string | undefined\n\tsummary: string | null | undefined\n\ttext: string\n\ttype: string\n\tvalidFrom: string | undefined\n\tvalidUntil: string | undefined\n}[]\n\ntype Operator = {\n  type: \"operator\",\n  id: string,\n  name: string\n}\n\ntype LINE_A = {\n\tcolor: {\n\t\tfg: string\n\t\tbg: string\n\t}\n\texpress: boolean\n\tfahrtNr: string\n\tid: string\n\tmetro: boolean\n\tmode: string\n\tname: string\n\tnight: boolean\n\tnr: number\n\toperator: Operator\n\tproduct: \"regional\" | \"suburban\" | \"subway\"\n\ttype: string\n}\n\ntype LINE_B = {\n\texpress: boolean\n\tfahrtNr: string\n\tid: string\n\tmetro: boolean\n\tmode: string\n\tname: string\n\tnight: boolean\n\tnr: number\n\toperator: Operator\n\tproduct: \"express\" | \"tram\" | \"bus\" | \"ferry\"\n\ttype: string\n}\n\ntype Dataset = {\n\tcancelled: boolean | undefined\n\tcurrentTripPosition: Location\n\tdelay: number | null\n\tdirection: string | null\n\tformerScheduledWhen?: string\n\tline: LINE_A | LINE_B\n\tplannedPlatform?: string\n\tplannedWhen?: string\n\tplatform?: number | string\n\tprognosedPlatform?: string\n\tprognosisType: string | null | undefined\n\tprovenance: string | null\n\tremarks: Remarks\n\tscheduledWhen?: string\n\tstop: {\n\t\tid: string\n\t\tname: string\n\t\tlocation: Location\n\t}\n\ttripId: string\n\twhen?: string\n}\n\ntype Stop = {\n\tid: string\n\tname: string\n\ttype?: string\n}\n\ntype Options = {\n\texpress?: boolean\n\tregional?: boolean\n\tsuburban?: boolean\n\tsubway?: boolean\n\ttram?: boolean\n\tbus?: boolean\n\tferry?: boolean\n\tdirection?: string\n}\n\ntype Data = Dataset[]\n\nexport default function Timetable() {\n\tconst [selection, setSelection] = useDebugState<Stop[]>(\"selection\", [])\n\tconst [filterSelection, setFilterSelection] = useDebugState<(Stop)[]>(\"filterSelection\", [])\n\tconst [stop, setStop] = useDebugState<Stop>(\"stop\", {\n\t\tid: \"\",\n\t\tname: \"\",\n\t\ttype: \"\",\n\t})\n\tconst [filterStop, setFilterStop] = useDebugState<Stop>(\"filterStop\", { id: \"0\", name: \"⸺\", type: \"\" })\n\tconst [data, setData] = useDebugState<Data>(\"data\", [])\n\tconst [date, setDate] = useDebugState<string>(\"date\", \"\")\n\tconst [error, setError] = useDebugState<any>(\"error\", null)\n\tconst [express, setExpress] = useDebugState<boolean>(\"express\", true)\n\tconst [regional, setRegional] = useDebugState<boolean>(\"regional\", true)\n\tconst [suburban, setSuburban] = useDebugState<boolean>(\"suburban\", true)\n\tconst [subway, setSubway] = useDebugState<boolean>(\"subway\", true)\n\tconst [tram, setTram] = useDebugState<boolean>(\"tram\", true)\n\tconst [bus, setBus] = useDebugState<boolean>(\"bus\", true)\n\tconst [ferry, setFerry] = useDebugState<boolean>(\"ferry\", true)\n\tconst params = useParams()\n\tconst navigate = useNavigate()\n\tuseEffect(() => {\n\t\tasync function findInitialStop() {\n\t\t\tif (\n\t\t\t\tparams.hasOwnProperty(\"id\") &&\n\t\t\t\ttypeof params.id === \"string\" &&\n\t\t\t\tparams.id.length === 9\n\t\t\t) {\n\t\t\t\ttry {\n\t\t\t\t\t// const stationUrl =\n\t\t\t\t\t// `https://station-api-jade.vercel.app/?id=${params.id}`\n\t\t\t\t\tconst stationUrl = `https://vbb-rest.vercel.app/stops/${params.id}?language=de`\n\t\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\tstationUrl\n\t\t\t\t\t)\n\t\t\t\t\tconst station = await response.json()\n\t\t\t\t\tconst { name } = await station\n\t\t\t\t\tnavigate(`/departures/${params.id}`)\n\t\t\t\t\tsetStop(station)\n\t\t\t\t\tgetData(params.id, name, {})\n\t\t\t\t\tdocument.title = navigator.language.startsWith(\"de\")\n\t\t\t\t\t? `Abfahrten ab ${name}`\n\t\t\t\t\t: `Departures from ${name}`\n\t\t\t\t\tconst stopSelection = [station]\n\t\t\t\t\tsetSelection(stopSelection)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.debug(error)\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tparams.hasOwnProperty(\"id\") &&\n\t\t\t\ttypeof params.id === 'string' &&\n\t\t\t\tparams.id.length === 12\n\t\t\t) {\n\t\t\t\ttry {\n\t\t\t\t\tconst modifiedId = `${params.id.slice(0, 1)}${params.id.slice(-8)}`\n\t\t\t\t\t// const stationUrl =\n\t\t\t\t\t// `https://station-api-jade.vercel.app/?id=${modifiedId}`\n\t\t\t\t\tconst stationUrl = `https://vbb-rest.vercel.app/stops/${modifiedId}?language=de`\n\t\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\tstationUrl\n\t\t\t\t\t)\n\t\t\t\t\tconst station = await response.json()\n\t\t\t\t\tconst { name } = await station\n\t\t\t\t\tnavigate(`/departures/${modifiedId}`)\n\t\t\t\t\tsetStop(station)\n\t\t\t\t\tgetData(modifiedId, name, {})\n\t\t\t\t\tdocument.title = navigator.language.startsWith(\"de\")\n\t\t\t\t\t\t? `Abfahrten ab ${name}`\n\t\t\t\t\t\t: `Departures from ${name}`\n\t\t\t\t\tconst stopSelection = [station]\n\t\t\t\t\tsetSelection(stopSelection)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.debug(error)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst initialId = \"900100011\"\n\t\t\t\t\t// const stationUrl = `https://station-api-jade.vercel.app/?id=${initialId}`\n\t\t\t\t\tconst stationUrl = `https://vbb-rest.vercel.app/stops/${initialId}?language=de`\n\t\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\tstationUrl\n\t\t\t\t\t)\n\t\t\t\t\tconst station = await response.json()\n\t\t\t\t\tconst { name: initialName } = await station\n\t\t\t\t\tnavigate(`/departures/${initialId}`)\n\t\t\t\t\tsetStop(station)\n\t\t\t\t\tgetData(initialId, initialName, {})\n\t\t\t\t\tdocument.title = navigator.language.startsWith(\"de\")\n\t\t\t\t\t\t? `Abfahrten ab ${initialName}`\n\t\t\t\t\t\t: `Departures from ${initialName}`\n\t\t\t\t\tconst stopSelection = [station]\n\t\t\t\t\tsetSelection(stopSelection)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.debug(error)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfindInitialStop()\n\t}, [])\n\tconst inputField = useRef<HTMLInputElement>(null)\n\tconst viaInputField = useRef<HTMLInputElement>(null)\n\tconst getStopSelection = async (event: {\n\t\tkey: string\n\t\ttarget: { value: string }\n\t}) => {\n\t\tconst searchValue = event.target.value\n\t\ttry {\n\t\t\tif (searchValue.length >= 3) {\n\t\t\t\t// const getStopsUrl = `https://station-api-jade.vercel.app/?station=${searchValue}`\n\t\t\t\tconst getStopsUrl = `https://vbb-rest.vercel.app/locations?query=${searchValue}&results=15&fuzzy=true&stops=true&addresses=false&poi=false&language=de&linesOfStops=true`\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\tgetStopsUrl\n\t\t\t\t)\n\t\t\t\tconst data = await response.json()\n\t\t\t\tconst newData = [stop, ...data]\n\t\t\t\tsetSelection(newData)\n\t\t\t} else {\n\t\t\t\tsetSelection([stop])\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.debug(error)\n\t\t}\n\t}\n\tconst getFilterStopSelection = async (event: {\n\t\tkey: string\n\t\ttarget: { value: string }\n\t}) => {\n\t\tconst searchValue = event.target.value\n\t\ttry {\n\t\t\tconst nullElement = { id: \"0\", name: \"⸺\", type: \"\" }\n\t\t\tif (searchValue.length >= 3) {\n\t\t\t\t// const getStopsUrl = `https://station-api-jade.vercel.app/?station=${searchValue}`\n\t\t\t\tconst getStopsUrl = `https://vbb-rest.vercel.app/locations?query=${searchValue}&results=15&fuzzy=true&stops=true&addresses=false&poi=false&language=de&linesOfStops=true`\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\tgetStopsUrl\n\t\t\t\t)\n\t\t\t\tconst fdata = await response.json()\n\t\t\t\tconst newData = filterStop.id !== \"0\"\n\t\t\t\t\t? [ nullElement, filterStop, ...fdata ]\n\t\t\t\t\t: [ nullElement, ...fdata ]\n\t\t\t\tsetFilterSelection(newData)\n\t\t\t} else if (filterStop.id !== \"0\") {\n\t\t\t\tconst newData = [ nullElement, filterStop ]\n\t\t\t\tsetFilterSelection(newData)\n\t\t\t} else {\n\t\t\t\tsetFilterSelection([nullElement])\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.debug(error)\n\t\t}\n\t}\n\tconst setCurrStop = (currStop: Stop) => {\n\t\tsetStop(currStop)\n\t}\n\tconst getType = (name: string) => {\n\t\tif (name.startsWith(\"Berlin\")) {\n\t\t\treturn \"BLN\"\n\t\t}\n\t\tif (name.includes(\"(Berlin)\")) {\n\t\t\treturn \"BLN\"\n\t\t}\n\t\tif (name.includes(\"Berlin Hauptbahnhof\")) {\n\t\t\treturn \"BLN\"\n\t\t}\n\t\treturn \"BBG\"\n\t}\n\tconst getData = async (id: string, name: string, options: Options) => {\n\t\ttry {\n\t\t\tconst type = getType(name)\n\t\t\tconst duration = getDuration(type)\n\t\t\tlet lang = \"de\"\n\t\t\tconst browserLang = navigator.language\n\t\t\tif (browserLang.startsWith(\"de\")) {\n\t\t\t\tlang = \"de\"\n\t\t\t} else {\n\t\t\t\tlang = \"en\"\n\t\t\t}\n\t\t\tconst direction = options.direction\n\t\t\t\t? options.direction !== \"0\"\n\t\t\t\t\t? parseInt(options.direction,10)\n\t\t\t\t\t: null\n\t\t\t\t: filterStop.id !== \"0\"\n\t\t\t\t\t\t? parseInt(filterStop.id, 10)\n\t\t\t\t\t\t: null\n\t\t\tconst directionSnippet = typeof direction === 'number'\n\t\t\t\t? `&direction=${direction}`\n\t\t\t\t: ''\n\t\t\t// const url =\n\t\t\t// `https://sklinkusch-vbbmicro.vercel.app/?station=${id}&duration=${duration}&language=${lang}`\n\t\t\tconst url = `https://vbb-rest.vercel.app/stops/${id}/departures?language=${lang}&duration=${duration}&express=${typeof options.express === 'boolean' ? options.express.toString() : express.toString()}&regional=${typeof options.regional === 'boolean' ? options.regional.toString() : regional.toString()}&suburban=${typeof options.suburban === 'boolean' ? options.suburban.toString() : suburban.toString()}&subway=${typeof options.subway === 'boolean' ? options.subway.toString() : subway.toString()}&tram=${typeof options.tram === 'boolean' ? options.tram.toString() : tram.toString()}&bus=${typeof options.bus === 'boolean' ? options.bus.toString() : bus.toString()}&ferry=${typeof options.ferry === 'boolean' ? options.ferry.toString() : ferry.toString()}${directionSnippet}`\n\t\t\tconst response = await fetch(url)\n\t\t\tconst {status } = await response\n\t\t\tconst resData = await response.json()\n\t\t\tif (status === 500 || status !== 200) {\n\t\t\t\tsetError(`HTTP status code: ${status}`)\n\t\t\t\tsetData([])\n\t\t\t} else {\n\t\t\t\tconst { departures } = resData\n\t\t\t\tconst myDate = new Date().toLocaleString(\"de-DE\", {\n\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\tmonth: \"2-digit\",\n\t\t\t\t\tday: \"2-digit\",\n\t\t\t\t\thour: \"2-digit\",\n\t\t\t\t\tminute: \"2-digit\",\n\t\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t\t})\n\t\t\t\tdocument.title =\n\t\t\t\t\tlang === \"de\" ? `Abfahrten ab ${name}` : `Departures from ${name}`\n\t\t\t\tsetDate(myDate)\n\t\t\t\tsetData(departures)\n\t\t\t\t// setViewData(departures)\n\t\t\t\tsetError(null)\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.debug(error)\n\t\t}\n\t}\n\tconst handleChange = (currentStop: Stop) => {\n\t\tsetCurrStop(currentStop)\n\t\tconst { id: myStopId, name: currentStopName } = currentStop\n\t\tgetData(myStopId, currentStopName, {})\n\t\tconst inputCurrent = inputField.current as HTMLInputElement\n\t\tinputCurrent.value = \"\"\n\t}\n\tconst handleFilterChange = (currentStop: Stop) => {\n\t\tsetFilterStop(currentStop)\n\t\tif (currentStop.id !== \"0\") {\n\t\t\tgetData(stop.id, stop.name, { direction: currentStop.id })\n\t\t} else {\n\t\t\tgetData(stop.id, stop.name, {})\n\t\t}\n\t\tconst viaInputCurrent = viaInputField.current as HTMLInputElement\n\t\tviaInputCurrent.value = \"\"\n\t}\n\tconst handleSubmit = () => {\n\t\tgetData(stop.id, stop.name, {})\n\t\tconst inputCurrent = inputField.current as HTMLInputElement\n\t\tinputCurrent.value = \"\"\n\t}\n\treturn (\n\t\t<div className=\"timetable\" sx={{ minHeight: \"75vh\" }}>\n\t\t\t{inputField && (\n\t\t\t\t<Input filterStops={getStopSelection} inputField={inputField} />\n\t\t\t)}\n\t\t\t<Select\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tselection={selection}\n\t\t\t\tstop={stop}\n\t\t\t\tmode=\"dep\"\n\t\t\t/>\n\t\t\t<Button handleSubmit={handleSubmit} />\n\t\t\t<div>\n\t\t\t\t<span sx={{ display: \"inline-block\", mr: \"0.2rem\", fontStyle: \"italic\", fontWeight: 700 }}>via</span>\n\t\t\t\t<Input filterStops={getFilterStopSelection} inputField={viaInputField} />\n\t\t\t\t<Filter handleChange={handleFilterChange} selection={filterSelection} stop={filterStop} />\n\t\t\t</div>\n\t\t\t<ProductsFilter \n\t\t\t\tproducts={\n\t\t\t\t\t[ \n\t\t\t\t\t\texpress, \n\t\t\t\t\t\tregional, \n\t\t\t\t\t\tsuburban, \n\t\t\t\t\t\tsubway, \n\t\t\t\t\t\ttram, \n\t\t\t\t\t\tbus, \n\t\t\t\t\t\tferry \n\t\t\t\t\t]\n\t\t\t\t} \n\t\t\t\tproductSetters={\n\t\t\t\t\t[ \n\t\t\t\t\t\tsetExpress, \n\t\t\t\t\t\tsetRegional, \n\t\t\t\t\t\tsetSuburban, \n\t\t\t\t\t\tsetSubway, \n\t\t\t\t\t\tsetTram, \n\t\t\t\t\t\tsetBus, \n\t\t\t\t\t\tsetFerry \n\t\t\t\t\t]\n\t\t\t\t} \n\t\t\t\tgetData={(options: Options) => getData(stop.id, stop.name, options)} \n\t\t\t/>\n\t\t\t<StopBody\n\t\t\t\tstop={stop}\n\t\t\t\tdata={data}\n\t\t\t\terror={error}\n\t\t\t\tdate={date}\n\t\t\t\tmode=\"dep\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","import React from \"react\"\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\"\nimport LegendDep from \"../components/LegendDep/LegendDep\"\nimport Timetable from \"../components/Timetable/Timetable\"\n// const LegendDep = lazy(() => import(\"../components/LegendDep\"))\n// const Timetable = lazy(() => import(\"../components/Timetable\"))\n\nfunction VBBDepartures() {\n  // let pathProps\n  // switch(process.env.NODE_ENV) {\n  //   case \"development\":\n  //     pathProps = { basename: process.env.PUBLIC_URL }\n  //     //  pathProps = {}\n  //     break\n  //   case \"production\":\n  //     pathProps = { basename: process.env.PUBLIC_URL }\n  //     // pathProps = {}\n  //     break\n  //   default:\n  //     pathProps = { basename: process.env.PUBLIC_URL }\n  //     // pathProps = {}\n  // }\n  return (\n    <div>\n      <LegendDep />\n      {/* <Router { ...pathProps }>\n        <Routes>\n          <Route path=\"/:stopId\" element={<Timetable />} />\n          <Route path=\"\" element={< Timetable />} />\n          <Route path=\"*\" element={< Timetable />} />\n        </Routes>\n      </Router> */}\n      <Timetable />\n    </div>\n  )\n}\n\nexport default VBBDepartures\n"],"names":["Legendrow","_ref","left","right","_jsxs","React","children","_jsx","className","sx","gridColumn","textAlign","LegendDep","display","gridTemplateColumns","border","width","margin","borderRadius","getLocale","Timetable","_useDebugState","useDebugState","_useDebugState2","_slicedToArray","selection","setSelection","_useDebugState3","_useDebugState4","filterSelection","setFilterSelection","_useDebugState5","id","name","type","_useDebugState6","stop","setStop","_useDebugState7","_useDebugState8","filterStop","setFilterStop","_useDebugState9","_useDebugState10","data","setData","_useDebugState11","_useDebugState12","date","setDate","_useDebugState13","_useDebugState14","error","setError","_useDebugState15","_useDebugState16","express","setExpress","_useDebugState17","_useDebugState18","regional","setRegional","_useDebugState19","_useDebugState20","suburban","setSuburban","_useDebugState21","_useDebugState22","subway","setSubway","_useDebugState23","_useDebugState24","tram","setTram","_useDebugState25","_useDebugState26","bus","setBus","_useDebugState27","_useDebugState28","ferry","setFerry","params","useParams","navigate","useNavigate","useEffect","_findInitialStop","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stationUrl","response","station","_yield$station","modifiedId","_stationUrl","_response","_station","_yield$_station","_name","initialId","_stationUrl2","_response2","_station2","_yield$_station2","initialName","wrap","_context","prev","next","hasOwnProperty","length","concat","fetch","sent","json","getData","document","title","navigator","language","startsWith","t0","console","debug","slice","t1","t2","apply","arguments","findInitialStop","inputField","useRef","viaInputField","getStopSelection","_callee2","event","searchValue","getStopsUrl","_data","newData","_context2","target","value","_toConsumableArray","_x","getFilterStopSelection","_ref2","_callee3","nullElement","fdata","_context3","_x2","getType","includes","_ref3","_callee4","options","duration","lang","browserLang","direction","directionSnippet","url","_yield$response","status","resData","departures","myDate","_context4","getDuration","parseInt","toString","Date","toLocaleString","year","month","day","hour","minute","timeZone","_x3","_x4","_x5","minHeight","Input","filterStops","Select","handleChange","currentStop","myStopId","currentStopName","current","mode","Button","handleSubmit","mr","fontStyle","fontWeight","Filter","ProductsFilter","products","productSetters","StopBody"],"sourceRoot":""}