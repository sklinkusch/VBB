{"version":3,"file":"static/js/210.79c08361.chunk.js","mappings":"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","sources":["components/TimetableArr.js"],"sourcesContent":["import React, { useState, useRef, useEffect, lazy } from \"react\"\nimport axios from \"axios\"\nimport { getDuration } from \"../components/helpers\"\nimport stops from \"../data/stops\"\nconst Input = lazy(() => import(\"./Input\"))\nconst Select = lazy(() => import(\"./Select\"))\nconst Button = lazy(() => import(\"./Button\"))\nconst Filter = lazy(() => import(\"./Filter\"))\nconst StopBody = lazy(() => import(\"./StopBody\"))\n/* eslint-disable react-hooks/exhaustive-deps */\n\nexport default function Timetable(props) {\n  const [allStops] = useState(stops)\n  const [selection, setSelection] = useState(stops)\n  const [stop, setStop] = useState({})\n  const [data, setData] = useState([])\n  const [viewData, setViewData] = useState([])\n  const [error, setError] = useState(null)\n  useEffect(() => {\n    const initialStopArray = stops.filter(\n      (stop) => stop.name === \"U Stadtmitte\"\n    )\n    const [initialStop] = initialStopArray\n    const { id: initialId } = initialStop\n    setStop(initialStop)\n    getData(initialId)\n    const remainingStops = allStops.filter(\n      (stop) => stop.name !== initialStop.name\n    )\n    const stopSelection = [initialStop, ...remainingStops]\n    setSelection(stopSelection)\n  }, []) \n  const inputField = useRef(null)\n  const filterField = useRef(null)\n  const filterSelector = useRef(null)\n  const filterData = (event) => {\n    const { current: fieldCurrent } = filterField\n    const { value: fieldValue } = fieldCurrent\n    const filterValues = fieldValue.split(\" \")\n    const { current: selectorCurrent } = filterSelector\n    const { value: filterMode } = selectorCurrent\n    if (filterValues.length > 0) {\n      if (filterMode === \"OR\") {\n        filterOr(filterValues)\n      } else {\n        filterAnd(filterValues)\n      }\n    } else {\n      noFilters()\n    }\n  }\n  const filterOr = (filterValues) => {\n    const filteredData = data.filter((arrival) => {\n      let decider = false\n      for (let i = 0; i < filterValues.length; i++) {\n        if (\n          arrival.line.name\n            .toLowerCase()\n            .includes(filterValues[i].toLowerCase()) ||\n          arrival.direction\n            .toLowerCase()\n            .includes(filterValues[i].toLowerCase())\n        ) {\n          decider = true\n          break\n        }\n      }\n      return decider\n    })\n    setViewData(filteredData)\n  }\n  const filterAnd = (filterValues) => {\n    const filteredData = data.filter((arrival) => {\n      let decider = true\n      for (let i = 0; i < filterValues.length; i++) {\n        if (\n          arrival.line.name\n            .toLowerCase()\n            .includes(filterValues[i].toLowerCase()) ||\n          arrival.direction\n            .toLowerCase()\n            .includes(filterValues[i].toLowerCase())\n        ) {\n          continue\n        } else {\n          decider = false\n          break\n        }\n      }\n      return decider\n    })\n    setViewData(filteredData)\n  }\n  const noFilters = () => {\n    setViewData(data)\n  }\n  const filterStops = (filterValue) => {\n    const remainingStops = allStops.filter(\n      (currStop) =>\n        currStop.id !== stop.id &&\n        currStop.name.toLowerCase().includes(filterValue.toLowerCase())\n    )\n    const newSelection = [stop, ...remainingStops]\n    setSelection(newSelection)\n  }\n  const doFilter = (event) => {\n    // if (event.key === \"Enter\") {\n    const filterValue = event.target.value\n    filterStops(filterValue)\n    // }\n  }\n  const setCurrStop = (currStop) => {\n    setStop(currStop)\n  }\n  const getData = async (id) => {\n    const currentStopArray = allStops.filter((stop) => stop.id === id)\n    const [currentStop] = currentStopArray\n    const { type = \"BBG\" } = currentStop\n    const duration = getDuration(type)\n    const url = `https://sklinkusch-vbbmicro.vercel.app/?station=${id}&duration=${duration}&mode=arr`\n    const response = await axios.get(url)\n    const { data: resData, status } = await response\n    if (status === 500 || status !== 200) {\n      setError(`HTTP status code: ${status}`)\n      setData([])\n    } else {\n      setData(resData)\n      setViewData(resData)\n      setError(null)\n    }\n  }\n  const handleChange = (currentStop) => {\n    setCurrStop(currentStop)\n    const { id: myStopId } = currentStop\n    getData(myStopId)\n    inputField.current.value = \"\"\n    filterField.current.value = \"\"\n    filterSelector.current.value = \"OR\"\n  }\n  const handleSubmit = () => {\n    getData(stop.id)\n    inputField.current.value = \"\"\n    filterField.current.value = \"\"\n    filterSelector.current.value = \"OR\"\n  }\n  // useEffect(() => {\n  //   getData(stop);\n  // }, []);\n  return (\n    <div className=\"timetable\">\n      <Input filterStops={doFilter} inputField={inputField} />\n      <Select handleChange={handleChange} selection={selection} stop={stop} />\n      <Button handleSubmit={handleSubmit} />\n      <Filter\n        filterField={filterField}\n        filterSelector={filterSelector}\n        filterData={filterData}\n        mode=\"arr\"\n      />\n      <StopBody stop={stop} data={viewData} error={error} mode=\"arr\" />\n    </div>\n  )\n}\n"],"names":["Input","lazy","Select","Button","Filter","StopBody","Timetable","props","useState","stops","allStops","selection","setSelection","stop","setStop","data","setData","viewData","setViewData","error","setError","useEffect","initialStopArray","name","initialStop","initialId","id","getData","remainingStops","filter","stopSelection","inputField","useRef","filterField","filterSelector","filterOr","filterValues","filteredData","arrival","decider","i","length","line","toLowerCase","includes","direction","filterAnd","noFilters","currentStopArray","currentStop","type","duration","getDuration","url","axios","response","resData","status","className","filterStops","event","filterValue","currStop","newSelection","target","value","handleChange","myStopId","current","handleSubmit","filterData","split","filterMode","mode"],"sourceRoot":""}