{"version":3,"file":"static/js/619.ac337c07.chunk.js","mappings":"iRAkBaA,EAAa,SAACC,GAC1B,GAAkB,OAAdA,QAAoCC,IAAdD,EAAyB,CAClD,IAAME,EAAYF,EAAUG,UAAU,EAAG,IAAIC,MAAM,KACnD,UAA2BF,EAAS,GAA7BG,EAAI,KAAEC,EAAK,KAAEC,EAAG,KACjBC,EAAOR,EAAUG,UAAU,GAAI,IACrC,MAAM,GAAN,OAAUI,EAAG,YAAID,EAAK,YAAID,EAAI,aAAKG,EACpC,CACA,OAAO,IACR,EAEaC,EAAa,SAACC,GAC1B,GAAoB,kBAATA,EAAmB,CAC7B,IAAMC,EAAmBC,EAAaF,GAEtC,OADsBG,EAAoBF,EAE3C,CACA,MAAO,EACR,EAEaC,EAAe,SAACE,GAC5B,GAAoB,kBAATA,EAAmB,CAC7B,GAAI,0BAA0BC,KAAKD,GAAO,CAEzC,OAAOA,EAAKE,QADI,qCACa,UAC9B,CACA,OAAOF,CACR,CACA,OAAOA,CACR,EAEaD,EAAsB,SAACH,GACnC,GAAoB,kBAATA,EAAmB,CAC7B,IACIO,EADkBP,EAAKM,QAAQ,aAAc,KAClBA,QAAQ,QAAS,KAEhD,OADAC,EAAWA,EAASD,QAAQ,QAAS,IAEtC,CACA,OAAON,CACR,EAkCA,UAhCgB,SAAH,GAA4B,IAClCQ,EADmB,EAAPC,QACOC,QAAO,SAACC,GAAM,MAAqB,YAAhBA,EAAOC,IAAkB,IAC/DC,EAAoBL,EACxBM,KAAI,SAACC,GACL,IAAMC,EAAO3B,EAAW0B,EAAQE,WAC1BC,EAAQ7B,EAAW0B,EAAQI,YAC3BC,EAAUrB,EAAWgB,EAAQK,SAC7BpB,EAAOD,EAAWgB,EAAQf,MAChC,MAAM,GAAN,OAAUgB,GAAc,GAAE,cAAME,GAAgB,GAAE,aACjDE,GAAoB,GAAE,aAClBpB,GAAc,GACpB,IACCqB,KAAK,MACP,OACC,eACCC,UAAU,UACVC,GAAI,CACHC,UAAW,SACXC,WAAY,CAAC,cAAe,cAAe,eAC3CC,GAAI,GACH,SAEDlB,EAASmB,OAAS,GAClB,gBACCL,UAAU,8BACVM,MAAOf,IAEL,MAGP,C","sources":["components/Warning/Warning.tsx"],"sourcesContent":["/** @jsxImportSource theme-ui */\n\ntype Remarks = {\n\tsummary: string | null | undefined\n\ttext: string | undefined\n\ttype: string | undefined\n\tvalidFrom: string | undefined\n\tvalidUntil: string | undefined\n}[]\n\ntype Props = {\n\tremarks: Remarks\n}\n\ntype Timestamp = string | null | undefined\n\ntype Text = string | null | undefined\n\nexport const formatTime = (timestamp: Timestamp) => {\n\tif (timestamp !== null && timestamp !== undefined) {\n\t\tconst dateArray = timestamp.substring(0, 10).split(\"-\")\n\t\tconst [year, month, day] = dateArray\n\t\tconst time = timestamp.substring(11, 16)\n\t\treturn `${day}.${month}.${year}, ${time}`\n\t}\n\treturn null\n}\n\nexport const formatText = (text: Text) => {\n\tif (typeof text === \"string\") {\n\t\tconst textWithoutLinks = replaceLinks(text)\n\t\tconst formattedText = includeSpecialChars(textWithoutLinks)\n\t\treturn formattedText\n\t}\n\treturn \"\"\n}\n\nexport const replaceLinks = (item: Text) => {\n\tif (typeof item === \"string\") {\n\t\tif (/<a.*href=\".*\".*>.*<\\/a>/.test(item)) {\n\t\t\tconst pattern = /<a.*href=\"([\\w:/.]*)\".*>(.*)<\\/a>/g\n\t\t\treturn item.replace(pattern, \"$2 ($1)\")\n\t\t}\n\t\treturn item\n\t}\n\treturn item\n}\n\nexport const includeSpecialChars = (text: Text) => {\n\tif (typeof text === \"string\") {\n\t\tlet textWODoubleBrs = text.replace(/(\\[br\\]*)/g, \" \")\n\t\tlet textForm = textWODoubleBrs.replace(/&lt;/g, \"<\")\n\t\ttextForm = textForm.replace(/&gt;/g, \">\")\n\t\treturn textForm\n\t}\n\treturn text\n}\n\nconst Warning = ({ remarks }: Props) => {\n\tconst warnings = remarks.filter((remark) => remark.type === \"warning\")\n\tconst formattedWarnings = warnings\n\t\t.map((warning) => {\n\t\t\tconst from = formatTime(warning.validFrom)\n\t\t\tconst until = formatTime(warning.validUntil)\n\t\t\tconst summary = formatText(warning.summary)\n\t\t\tconst text = formatText(warning.text)\n\t\t\treturn `${from ? from : \"\"} - ${until ? until : \"\"}: ${\n\t\t\t\tsummary ? summary : \"\"\n\t\t\t}, ${text ? text : \"\"}`\n\t\t})\n\t\t.join(\"\\n\")\n\treturn (\n\t\t<div\n\t\t\tclassName=\"warning\"\n\t\t\tsx={{\n\t\t\t\ttextAlign: \"center\",\n\t\t\t\tgridColumn: [\"11 / span 5\", \"11 / span 5\", \"23 / span 1\"],\n\t\t\t\tpx: 0,\n\t\t\t}}\n\t\t>\n\t\t\t{warnings.length > 0 ? (\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"fas fa-exclamation-triangle\"\n\t\t\t\t\ttitle={formattedWarnings}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t)\n}\n\nexport default Warning\n"],"names":["formatTime","timestamp","undefined","dateArray","substring","split","year","month","day","time","formatText","text","textWithoutLinks","replaceLinks","includeSpecialChars","item","test","replace","textForm","warnings","remarks","filter","remark","type","formattedWarnings","map","warning","from","validFrom","until","validUntil","summary","join","className","sx","textAlign","gridColumn","px","length","title"],"sourceRoot":""}