{"version":3,"sources":["components/Arrival.js"],"names":["__webpack_require__","r","__webpack_exports__","theme_ui__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","Time","lazy","e","then","bind","Product","Barrier","Bike","Warning","Status","Warntext","Stattext","Arrival","props","delayMin","getDelay","delay","cancelled","Math","floor","getTime","timestamp","substr","arr","plantime","realtime","when","hours","Number","minutes","hourString","concat","minuteString","getPlanTime","formerScheduledWhen","scheduledWhen","_props$arr","line","provenance","remarks","platform","linenumber","name","Object","className","key","tripId","sx","display","gridTemplateColumns","time","class","textAlign","gridColumn","borderBottom"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAGMK,EAAOC,eAAK,kBAAMN,EAAAO,EAAA,IAAAC,KAAAR,EAAAS,KAAA,YAClBC,EAAUJ,eAAK,kBAAMN,EAAAO,EAAA,GAAAC,KAAAR,EAAAS,KAAA,YACrBE,EAAUL,eAAK,kBAAMN,EAAAO,EAAA,GAAAC,KAAAR,EAAAS,KAAA,aACrBG,EAAON,eAAK,kBAAMN,EAAAO,EAAA,GAAAC,KAAAR,EAAAS,KAAA,aAClBI,EAAUP,eAAK,kBAAMN,EAAAO,EAAA,IAAAC,KAAAR,EAAAS,KAAA,aACrBK,EAASR,eAAK,kBAAMN,EAAAO,EAAA,IAAAC,KAAAR,EAAAS,KAAA,aACpBM,EAAWT,eAAK,kBAAMN,EAAAO,EAAA,IAAAC,KAAAR,EAAAS,KAAA,aACtBO,EAAWV,eAAK,kBAAMN,EAAAO,EAAA,GAAAC,KAAAR,EAAAS,KAAA,aAoFbQ,UAlFC,SAAAC,GACd,IAsCIC,EAtCEC,EAAW,SAACC,EAAOC,GACvB,OAAa,MAATD,EACKE,KAAKC,MAAMH,EAAQ,IACjBC,EACF,IAEA,KAyBLG,EAAU,SAAAC,GACd,OAAiB,MAAbA,EACKA,EAAUC,OAAO,GAAI,GAErB,IAKTR,EADED,EAAMU,IAAIN,UACDF,EAASF,EAAMU,IAAIP,MAAOH,EAAMU,IAAIN,WAEpCF,EAASF,EAAMU,IAAIP,OAAO,GAEvC,IACIQ,EADAC,EAAWL,EAAQP,EAAMU,IAAIG,MAEX,MAAlBb,EAAMU,IAAIG,MAAmC,MAAnBb,EAAMU,IAAIP,MACtCQ,EAtCkB,SAACC,EAAUT,GAC7B,IAAIW,EAAQC,OAAOH,EAASH,OAAO,EAAG,IAClCO,EAAUD,OAAOH,EAASH,OAAO,EAAG,KACxCO,GAAWb,GACG,IACZa,GAAW,GACXF,GAAS,GAEPE,EAAU,KACZA,GAAW,GACXF,GAAS,GAEPA,EAAQ,IACVA,GAAS,IAEPA,EAAQ,KACVA,GAAS,IAEX,IAAIG,EAAaH,EAAQ,GAAR,IAAAI,OAAiBJ,GAAjB,GAAAI,OAA8BJ,GAC3CK,EAAeH,EAAU,GAAV,IAAAE,OAAmBF,GAAnB,GAAAE,OAAkCF,GACrD,SAAAE,OAAUD,EAAV,KAAAC,OAAwBC,GAkBbC,CAAYR,EAAUX,GACN,MAAlBD,EAAMU,IAAIG,MAA6B,MAAbZ,GACnCU,EAAWC,EACXA,EAAW,IAEXD,EACEJ,EAAQP,EAAMU,IAAIW,sBAClBd,EAAQP,EAAMU,IAAIY,eAvDC,IAAAC,EAyDyBvB,EAAMU,IAA9Cc,EAzDeD,EAyDfC,KAAMC,EAzDSF,EAyDTE,WAAYC,EAzDHH,EAyDGG,QAASC,EAzDZJ,EAyDYI,SACrBC,EAAeJ,EAArBK,KACR,OACEC,OAAA7C,EAAA,EAAA6C,CAAC5C,EAAA,SAAD,KACE4C,OAAA7C,EAAA,EAAA6C,CAAA,OAAKC,UAAU,MAAMC,IAAKhC,EAAMU,IAAIuB,OAAQC,GAAI,CAAEC,QAAS,OAAQC,oBAAqB,mBACtFN,OAAA7C,EAAA,EAAA6C,CAAC3C,EAAD,CAAMkD,KAAM1B,EAAU2B,MAAM,aAC5BR,OAAA7C,EAAA,EAAA6C,CAAC3C,EAAD,CAAMkD,KAAMzB,EAAU0B,MAAM,aAC5BR,OAAA7C,EAAA,EAAA6C,CAAA,OAAKC,UAAU,QAAQG,GAAI,CAAEK,UAAW,CAAC,SAAU,SAAU,SAAUC,WAAY,CAAC,cAAe,gBAAiBvC,GACpH6B,OAAA7C,EAAA,EAAA6C,CAACtC,EAAD,CAASgC,KAAMA,IACfM,OAAA7C,EAAA,EAAA6C,CAAA,OAAKC,UAAU,OAAOG,GAAI,CAAEK,UAAW,OAAQC,WAAY,CAAC,aAAc,gBAAkBZ,GAC5FE,OAAA7C,EAAA,EAAA6C,CAAA,OAAKC,UAAU,YAAYG,GAAI,CAAEK,UAAW,OAAQC,WAAY,CAAC,cAAe,iBAAmBf,GACnGK,OAAA7C,EAAA,EAAA6C,CAAA,OAAKC,UAAU,WAAWG,GAAI,CAAEK,UAAW,SAAUC,WAAY,CAAC,cAAe,iBAAmBb,GACpGG,OAAA7C,EAAA,EAAA6C,CAACrC,EAAD,CAASiC,QAASA,IAClBI,OAAA7C,EAAA,EAAA6C,CAACpC,EAAD,CAAMgC,QAASA,IACfI,OAAA7C,EAAA,EAAA6C,CAACnC,EAAD,CAAS+B,QAASA,IAClBI,OAAA7C,EAAA,EAAA6C,CAAClC,EAAD,CAAQ8B,QAASA,KAEnBI,OAAA7C,EAAA,EAAA6C,CAAA,OAAKC,UAAU,cAAcC,IAAG,OAAAd,OAASlB,EAAMU,IAAIuB,QAAUC,GAAI,CAAEC,QAAS,OAAQC,oBAAqB,kBAAmBK,aAAc,CAAC,iBAAkB,iBAAiB,UAC5KX,OAAA7C,EAAA,EAAA6C,CAACjC,EAAD,CAAU6B,QAASA,IACnBI,OAAA7C,EAAA,EAAA6C,CAAChC,EAAD,CAAU4B,QAASA","file":"static/js/21.9660c138.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Fragment, lazy } from \"react\";\nconst Time = lazy(() => import(\"./Time\"));\nconst Product = lazy(() => import(\"./Product\"));\nconst Barrier = lazy(() => import(\"./Barrier\"));\nconst Bike = lazy(() => import(\"./Bike\"));\nconst Warning = lazy(() => import(\"./Warning\"));\nconst Status = lazy(() => import(\"./Status\"));\nconst Warntext = lazy(() => import(\"./Warntext\"));\nconst Stattext = lazy(() => import(\"./Stattext\"));\n\nconst Arrival = props => {\n  const getDelay = (delay, cancelled) => {\n    if (delay != null) {\n      return Math.floor(delay / 60);\n    } else if (cancelled) {\n      return \"X\";\n    } else {\n      return \"?\";\n    }\n  };\n  const getPlanTime = (realtime, delay) => {\n    let hours = Number(realtime.substr(0, 2));\n    let minutes = Number(realtime.substr(3, 2));\n    minutes -= delay;\n    if (minutes < 0) {\n      minutes += 60;\n      hours -= 1;\n    }\n    if (minutes > 59) {\n      minutes -= 60;\n      hours += 1;\n    }\n    if (hours < 0) {\n      hours += 24;\n    }\n    if (hours > 23) {\n      hours -= 24;\n    }\n    let hourString = hours < 10 ? `0${hours}` : `${hours}`;\n    let minuteString = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    return `${hourString}:${minuteString}`;\n  };\n  const getTime = timestamp => {\n    if (timestamp != null) {\n      return timestamp.substr(11, 5);\n    } else {\n      return \"\";\n    }\n  };\n  let delayMin;\n  if (props.arr.cancelled) {\n    delayMin = getDelay(props.arr.delay, props.arr.cancelled);\n  } else {\n    delayMin = getDelay(props.arr.delay, false);\n  }\n  let realtime = getTime(props.arr.when);\n  let plantime;\n  if (props.arr.when != null && props.arr.delay != null) {\n    plantime = getPlanTime(realtime, delayMin);\n  } else if (props.arr.when != null && delayMin === \"?\") {\n    plantime = realtime;\n    realtime = \"\";\n  } else {\n    plantime =\n      getTime(props.arr.formerScheduledWhen) ||\n      getTime(props.arr.scheduledWhen);\n  }\n  const { line, provenance, remarks, platform } = props.arr;\n  const { name: linenumber } = line;\n  return (\n    <Fragment>\n      <div className=\"row\" key={props.arr.tripId} sx={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n        <Time time={plantime} class=\"plantime\" />\n        <Time time={realtime} class=\"realtime\" />\n        <div className=\"delay\" sx={{ textAlign: [\"center\", \"center\", \"right\"], gridColumn: [\"17 / span 8\", \"5 / span 2\"]}}>{delayMin}</div>\n        <Product line={line} />\n        <div className=\"line\" sx={{ textAlign: \"left\", gridColumn: [\"2 / span 6\", \"8 / span 3\"] }}>{linenumber}</div>\n        <div className=\"direction\" sx={{ textAlign: \"left\", gridColumn: [\"8 / span 13\", \"11 / span 8\"] }}>{provenance}</div>\n        <div className=\"platform\" sx={{ textAlign: \"center\", gridColumn: [\"22 / span 3\", \"19 / span 2\"] }}>{platform}</div>\n        <Barrier remarks={remarks} />\n        <Bike remarks={remarks} />\n        <Warning remarks={remarks} />\n        <Status remarks={remarks} />\n      </div>\n      <div className=\"row row-add\" key={`add:${props.arr.tripId}`} sx={{ display: \"grid\", gridTemplateColumns: \"repeat(24, 1fr)\", borderBottom: [\"1px solid #ccc\", \"1px solid #ccc\",\"none\"] }}>\n        <Warntext remarks={remarks} />\n        <Stattext remarks={remarks} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Arrival;\n"],"sourceRoot":""}