{"version":3,"file":"static/js/305.b283eae1.chunk.js","mappings":"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","sources":["components/Trip/Trip.tsx"],"sourcesContent":["/** @jsxImportSource theme-ui */\n\ntype Loc = {\n  type: string\n  id?: string\n  latitude: string \n  longitude: string\n}\n\ntype Prod = {\n  suburban: boolean\n  subway: boolean\n  tram: boolean\n  bus: boolean\n  ferry: boolean\n  express: boolean\n  regional: boolean\n}\n\ntype OrigDest = {\n  type: string\n  id: string\n  name: string\n  location: Loc\n  products: Prod\n  stationDHID: string\n}\n\ntype Operator = {\n  type: string\n  id: string\n  name: string\n}\n\ntype Color = {\n  fg: string\n  bg: string\n}\n\ntype Line = {\n  type: string\n  id: string\n  fahrtNr: string\n  name: string\n  public: boolean\n  adminCode: string\n  productName: string\n  mode: string\n  product: string\n  operator: Operator\n  color: Color\n}\n\ntype Stopover = {\n  stop: OrigDest\n  arrival: string | null\n  plannedArrival: string | null\n  arrivalDelay: number | null\n  arrivalPlatform: string | null\n  arrivalPrognosisType: string | null\n  plannedArrivalPlatform: string | null\n  departure: string | null\n  plannedDeparture: string | null\n  departureDelay: number | null\n  departurePlatform: string | null\n  departurePrognosisType: string | null\n  plannedDeparturePlatform: string | null\n}\n\ntype Remarks = {\n\tcode: string | undefined\n\tsummary: string | null | undefined\n\ttext: string | undefined\n\ttype: string | undefined\n\tvalidFrom: string | undefined\n\tvalidUntil: string | undefined\n}[]\n\ntype Props = {\n  trip: {\n    origin: OrigDest\n    destination: OrigDest\n    departure: string\n    plannedDeparture: string\n    departureDelay: number | null\n    arrival: string\n    plannedArrival: string\n    arrivalDelay: number | null\n    line: Line\n    direction: string\n    currentLocation: Loc\n    arrivalPlatform: string\n    plannedArrivalPlatform: string\n    arrivalPrognosisType: string\n    departurePlatform: string\n    plannedDeparturePlatform: string\n    departurePrognosisType: string\n    stopovers: Stopover[]\n    remarks: Remarks\n    id: string\n  }\n  stopId: string\n  mode: \"dep\" | \"arr\"\n}\n\nfunction Trip({ trip, stopId, mode }: Props) {\n  const stopOfInterest = trip.stopovers.find(stopover => stopover.stop.id === stopId)\n  const indexOfInterest = stopOfInterest ? trip.stopovers.indexOf(stopOfInterest) : -1\n  const getTime = (timestamp: string) => {\n    return timestamp.split(\"T\")[1].substring(0,5)\n  }\n  const getDelay = (delay: number) => {\n    const roundedDelay = Math.round(delay / 60)\n    if (roundedDelay === 0) {\n      return \"±0\"\n    }\n    if (delay < 0) {\n      return `-${Math.abs(roundedDelay)}`\n    }\n    return `+${Math.abs(roundedDelay)}`\n  }\n  const getColor = (delay: number) => {\n    if (delay === 0) {\n      return \"blue\"\n    }\n    if (delay < 0) {\n      return \"green\"\n    }\n    return \"red\"\n  }\n  if (mode === \"dep\" && indexOfInterest !== -1) {\n    const remainingDepStops = trip.stopovers.slice(indexOfInterest + 1)\n    return (\n      <div sx={{ gridColumn: \"1 / span 24\", fontSize: \"0.8rem\", textAlign: \"left\", hyphens: \"auto\" }} lang=\"de\">\n        {remainingDepStops && remainingDepStops.length > 0 && remainingDepStops.map((stop, idx) => (\n          <>\n          <span>\n            {stop.stop.name}\n          </span>\n          {stop.plannedArrival ? <span sx={{ mx: \"0.3em\" }}>{getTime(stop.plannedArrival)}</span> : stop.plannedDeparture && <span sx={{ mx: \"0.3em\" }}>{getTime(stop.plannedDeparture)}</span>}\n          {typeof stop.arrivalDelay === 'number' ? <span sx={{ mr: \"0.2em\", color: getColor(stop.arrivalDelay) }}>{getDelay(stop.arrivalDelay)}</span> : typeof stop.departureDelay === 'number' && <span sx={{ mr: \"0.2em\", color: getColor(stop.departureDelay) }}>{getDelay(stop.departureDelay)}</span>}\n          {idx !== remainingDepStops.length - 1 && <span sx={{ mr: \"0.3em\" }}>–</span>}\n          </>\n        ))}\n      </div>\n    )\n  }\n  if (mode === \"arr\" && indexOfInterest !== -1) {\n    const remainingArrStops = trip.stopovers.slice(0, indexOfInterest)\n    return (\n      <div sx={{ gridColumn: \"1 / span 24\", fontSize: \"0.8rem\", textAlign: \"left\", hyphens: \"auto\" }} lang=\"de\">\n        {remainingArrStops && remainingArrStops.length > 0 && remainingArrStops.map((stop, idx) => (\n          <>\n          <span>\n            {stop.stop.name}\n          </span>\n          {stop.plannedDeparture ? <span sx={{ mx: \"0.3em\" }}>{getTime(stop.plannedDeparture)}</span> : stop.plannedArrival && <span sx={{ mx: \"0.3em\" }}>{getTime(stop.plannedArrival)}</span>}\n          {typeof stop.departureDelay === 'number' ? <span sx={{ mr: \"0.2em\", color: getColor(stop.departureDelay) }}>{getDelay(stop.departureDelay)}</span> : typeof stop.arrivalDelay === 'number' && <span sx={{ mr: \"0.2em\", color: getColor(stop.arrivalDelay) }}>{getDelay(stop.arrivalDelay)}</span>}\n          {idx !== remainingArrStops.length - 1 && <span sx={{ mr: \"0.3em\" }}>–</span>}\n          </>\n        ))}\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Trip"],"names":["_ref","trip","stopId","mode","stopOfInterest","stopovers","find","stopover","stop","id","indexOfInterest","indexOf","getTime","timestamp","split","substring","getDelay","delay","roundedDelay","Math","round","concat","abs","getColor","remainingDepStops","slice","_jsx","sx","gridColumn","fontSize","textAlign","hyphens","lang","children","length","map","idx","_jsxs","_Fragment","name","plannedArrival","mx","plannedDeparture","arrivalDelay","mr","color","departureDelay","remainingArrStops"],"sourceRoot":""}