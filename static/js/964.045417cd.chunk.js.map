{"version":3,"file":"static/js/964.045417cd.chunk.js","mappings":"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","sources":["components/Button/Button.tsx","components/Filter/Filter.tsx","components/Input/Input.tsx","components/Legendrow/Legendrow.tsx","components/Select/Select.tsx","components/LegendDep/LegendDep.tsx","components/Timetable/Timetable.tsx","pages/VBBDepartures.tsx"],"sourcesContent":["/** @jsxImportSource theme-ui */\nimport { Fragment, MouseEventHandler } from \"react\";\n\ntype Props = {\n  handleSubmit: MouseEventHandler\n}\n\nexport default function Button({ handleSubmit }: Props) {\n  return (\n    <Fragment>\n      <button onClick={handleSubmit} sx={{ padding: \"5px\", backgroundColor: \"#ccc\", opacity: 1 }}>\n        <i className=\"fas fa-redo-alt\" />\n      </button>\n    </Fragment>\n  );\n}\n","/** @jsxImportSource theme-ui */\nimport React, { ChangeEventHandler } from \"react\"\nimport getLocale from \"../Locales/getLocale\"\n\ntype Props = {\n  mode: string,\n  filterField: React.Ref<HTMLInputElement>,\n  filterSelector: React.Ref<HTMLSelectElement>\n  filterData: ChangeEventHandler\n}\n\nexport default function Filter(props: Props) {\n  const { filterField, filterSelector, filterData, mode = \"dep\" } = props\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder={mode === \"dep\" ? getLocale(\"filterDepartures\") : getLocale(\"filterArrivals\")}\n        ref={filterField}\n        onChange={(event) => props.filterData(event)}\n        sx={{ padding: \"5px\", opacity: 1, backgroundColor: \"#fff\", width: \"300px\", maxWidth: \"90%\" }}\n      />\n      <select ref={filterSelector} onChange={filterData} sx={{ padding: \"5px\", backgroundColor: \"#ccc\", opacity: 1, width: \"400px\", maxWidth: \"90%\", mx: \"10px\" }}>\n        <option value=\"OR\">{getLocale(\"filterOr\")}</option>\n        <option value=\"AND\">{getLocale(\"filterAnd\")}</option>\n      </select>\n    </div>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport { Fragment } from \"react\"\nimport getLocale from \"../Locales/getLocale\"\n\ntype Props = {\n  filterStops: Function,\n  inputField: React.Ref<HTMLInputElement>\n}\n\nexport default function Input({ filterStops, inputField }: Props) {\n  return (\n    <Fragment>\n      <input\n        type=\"text\"\n        onChange={(event) => filterStops(event)}\n        ref={inputField}\n        placeholder={getLocale(\"filterStops\")}\n        sx={{ padding: \"5px\", opacity: 1, backgroundColor: \"#fff\", width: \"300px\", maxWidth: \"90%\" }}\n      />\n    </Fragment>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport React from \"react\";\n\ntype Props = {\n  left: any,\n  right: string\n}\n\nexport default function Legendrow({left, right}: Props) {\n  return (\n    <React.Fragment>\n      <div className=\"legendleft\" sx={{ gridColumn: \"1 / span 4\" }}>{left}</div>\n      <div className=\"legendright\" sx={{ textAlign: \"left\", gridColumn: \"5 / span 20\" }}>{right}</div>\n    </React.Fragment>\n  );\n}\n","/** @jsxImportSource theme-ui */\nimport { Fragment } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\n\ntype Stop = {\n  id: string,\n  name: string,\n}\n\ntype Props = {\n  handleChange: Function,\n  mode: string,\n  stop: Stop,\n  selection: Stop[]\n}\n\nexport default function Select(props: Props) {\n  const { handleChange, selection, stop, mode } = props\n  const navigate = useNavigate()\n  return (\n    <Fragment>\n      <select\n        value={stop.id}\n        sx={{ padding: \"5px\", backgroundColor: \"#ccc\", opacity: 1, width: \"400px\", maxWidth: \"90%\", mx: \"10px\" }}\n        onChange={(event) => {\n          const id = event.target.value\n          const stop = selection.filter((stop) => stop.id === id)[0]\n          return handleChange(stop)\n        }}\n      >\n        {selection &&\n          selection.length >= 1 &&\n          selection.map((stop, index) => (\n            <option onClick={() => navigate(mode === 'arr' ? `/arrivals/${stop.id}` : `/departures/${stop.id}`)} key={`${stop.id}-${index}`} value={stop.id}>\n              {stop.name}\n            </option>\n          ))}\n      </select>\n    </Fragment>\n  )\n}\n","/** @jsxImportSource theme-ui */\nimport Legendrow from \"../Legendrow/Legendrow\";\nimport getLocale from \"../Locales/getLocale\";\n\nexport default function LegendDep() {\n  return (\n    <div className=\"legend\" sx={{ display: [\"none\", \"none\", \"grid\"], gridTemplateColumns: \"repeat(24,1fr)\", border: \"2px solid black\", width: \"70%\", margin: \"0 auto 40px auto\", borderRadius: \"10px\" }}>\n      <h3 sx={{ gridColumn: \"1 / span 24\" }}>{getLocale(\"legend\")}</h3>\n      <Legendrow\n        left={getLocale(\"scheduled\")}\n        right={getLocale(\"scheduledDesc\")}\n      />\n      <Legendrow\n        left={getLocale(\"real\")}\n        right={getLocale(\"realDesc\")}\n      />\n      <Legendrow left={getLocale(\"delay\")} right={getLocale(\"delayDesc\")} />\n      <Legendrow left={getLocale(\"line\")} right={getLocale(\"lineDesc\")} />\n      <Legendrow left={getLocale(\"direction\")} right={getLocale(\"directionDesc\")} />\n      <Legendrow\n        left={<span className=\"fas fa-wheelchair\" />}\n        right={getLocale(\"barrierfree\")}\n      />\n      <Legendrow\n        left={<span className=\"fas fa-bicycle\" />}\n        right={getLocale(\"bike\")}\n      />\n      <Legendrow\n        left={<span className=\"fas fa-exclamation-triangle\" />}\n        right={getLocale(\"attention\")}\n      />\n      <Legendrow\n        left={<span className=\"fas fa-times\" />}\n        right={getLocale(\"cancelled\")}\n      />\n    </div>\n  );\n}\n","/** @jsxImportSource theme-ui */\nimport { useRef, useEffect } from \"react\"\nimport { useParams, useNavigate } from \"react-router-dom\"\nimport { useDebugState } from \"use-named-state\"\nimport axios from \"axios\"\nimport { getDuration } from \"../helpers/helpers\"\nimport stops from \"../../data/stops\"\nimport Input from \"../Input/Input\"\nimport Select from \"../Select/Select\"\nimport Button from \"../Button/Button\"\nimport Filter from \"../Filter/Filter\"\nimport StopBody from \"../StopBody/StopBody\"\n// const Input = lazy(() => import(\"./Input\"))\n// const Select = lazy(() => import(\"./Select\"))\n// const Button = lazy(() => import(\"./Button\"))\n// const Filter = lazy(() => import(\"./Filter\"))\n// const StopBody = lazy(() => import(\"./StopBody\"))\n/* eslint-disable react-hooks/exhaustive-deps */\n\ntype Remarks = {\n\tcode: string | undefined\n\tsummary: string | null | undefined\n\ttext: string\n\ttype: string\n\tvalidFrom: string | undefined\n\tvalidUntil: string | undefined\n}[]\n\ntype Dataset = {\n\tcancelled: boolean | undefined\n\tdelay: number | null\n\tdirection: string | null\n\tformerScheduledWhen?: string\n\tline: {\n\t\texpress: boolean\n\t\tmetro: boolean\n\t\tmode: string\n\t\tname: string\n\t\tnight: boolean\n\t\tproduct: string\n\t\ttype: string\n\t}\n\tplannedPlatform?: string\n\tplannedWhen?: string\n\tplatform?: number | string\n\tprognosedPlatform?: string\n\tprognosisType: string | null | undefined\n\tprovenance: string | null\n\tremarks: Remarks\n\tscheduledWhen?: string\n\tstop: {\n\t\tid: string\n\t\tname: string\n\t}\n\ttripId: string\n\twhen?: string\n}\n\ntype Stop = {\n\tid: string\n\tname: string\n\ttype?: string\n}\n\ntype Data = Dataset[]\n\nexport default function Timetable() {\n\tconst [selection, setSelection] = useDebugState<Stop[]>(\"selection\", stops)\n\tconst [stop, setStop] = useDebugState<Stop>(\"stop\", {\n\t\tid: \"\",\n\t\tname: \"\",\n\t\ttype: \"\",\n\t})\n\tconst [data, setData] = useDebugState<Data>(\"data\", [])\n\tconst [date, setDate] = useDebugState<string>(\"date\", \"\")\n\tconst [viewData, setViewData] = useDebugState<Data>(\"viewData\", [])\n\tconst [error, setError] = useDebugState<any>(\"error\", null)\n\tconst params = useParams()\n\tconst navigate = useNavigate()\n\tuseEffect(() => {\n\t\tif (\n\t\t\tparams.hasOwnProperty(\"id\") &&\n\t\t\ttypeof params.id === \"string\" &&\n\t\t\tparams.id.length > 0\n\t\t) {\n\t\t\tconst selectedStop = stops.filter((stop) => stop.id === params.id)[0]\n\t\t\tnavigate(`/departures/${params.id}`)\n\t\t\tsetStop(selectedStop)\n\t\t\tgetData(params.id)\n\t\t\tconst remainingStops = stops.filter(\n\t\t\t\t(stop) => stop.name !== selectedStop.name\n\t\t\t)\n\t\t\tconst stopSelection = [selectedStop, ...remainingStops]\n\t\t\tsetSelection(stopSelection)\n\t\t} else {\n\t\t\tconst initialStopArray = stops.filter(\n\t\t\t\t(stop) => stop.name === \"U Stadtmitte\"\n\t\t\t)\n\t\t\tconst [initialStop] = initialStopArray\n\t\t\tconst { id: initialId } = initialStop\n\t\t\tnavigate(`/departures/${initialId}`)\n\t\t\tsetStop(initialStop)\n\t\t\tgetData(initialId)\n\t\t\tconst remainingStops = stops.filter(\n\t\t\t\t(stop) => stop.name !== initialStop.name\n\t\t\t)\n\t\t\tconst stopSelection = [initialStop, ...remainingStops]\n\t\t\tsetSelection(stopSelection)\n\t\t}\n\t}, [])\n\tconst inputField = useRef<HTMLInputElement>(null)\n\tconst filterField = useRef<HTMLInputElement>(null)\n\tconst filterSelector = useRef<HTMLSelectElement>(null)\n\tconst filterData = () => {\n\t\tconst fieldCurrent = filterField.current as HTMLInputElement\n\t\tconst { value: fieldValue } = fieldCurrent\n\t\tconst filterValues = fieldValue.split(\" \")\n\t\tconst selectorCurrent = filterSelector.current as HTMLSelectElement\n\t\tconst { value: filterMode } = selectorCurrent\n\t\tif (filterValues.length > 0) {\n\t\t\tif (filterMode === \"OR\") {\n\t\t\t\tfilterOr(filterValues)\n\t\t\t} else {\n\t\t\t\tfilterAnd(filterValues)\n\t\t\t}\n\t\t} else {\n\t\t\tnoFilters()\n\t\t}\n\t}\n\tconst filterOr = (filterValues: string[]) => {\n\t\tconst filteredData = data.filter((departure) => {\n\t\t\tlet decider = false\n\t\t\tif (departure.hasOwnProperty(\"direction\") && departure.direction) {\n\t\t\t\tfor (let i = 0; i < filterValues.length; i++) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tdeparture.line.name\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(filterValues[i].toLowerCase()) ||\n\t\t\t\t\t\tdeparture.direction\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(filterValues[i].toLowerCase())\n\t\t\t\t\t) {\n\t\t\t\t\t\tdecider = true\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn decider\n\t\t})\n\t\tsetViewData(filteredData)\n\t}\n\tconst filterAnd = (filterValues: string[]) => {\n\t\tconst filteredData = data.filter((departure) => {\n\t\t\tlet decider = true\n\t\t\tif (departure.hasOwnProperty(\"direction\") && departure.direction) {\n\t\t\t\tfor (let i = 0; i < filterValues.length; i++) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tdeparture.line.name\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(filterValues[i].toLowerCase()) ||\n\t\t\t\t\t\tdeparture.direction\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes(filterValues[i].toLowerCase())\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdecider = false\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn decider\n\t\t})\n\t\tsetViewData(filteredData)\n\t}\n\tconst noFilters = () => {\n\t\tsetViewData(data)\n\t}\n\tconst filterStops = (filterValue: string) => {\n\t\tconst remainingStops = stops.filter(\n\t\t\t(currStop) =>\n\t\t\t\tcurrStop.id !== stop.id &&\n\t\t\t\tcurrStop.name.toLowerCase().includes(filterValue.toLowerCase())\n\t\t)\n\t\tconst newSelection = [stop, ...remainingStops]\n\t\tsetSelection(newSelection)\n\t}\n\tconst doFilter = (event: { key: string; target: { value: string } }) => {\n\t\t// if (event.key === \"Enter\") {\n\t\tconst filterValue = event.target.value\n\t\tfilterStops(filterValue)\n\t\t// }\n\t}\n\tconst setCurrStop = (currStop: Stop) => {\n\t\tsetStop(currStop)\n\t}\n\tconst getData = async (id: string) => {\n\t\tconst currentStopArray = stops.filter((stop) => stop.id === id)\n\t\tconst [currentStop] = currentStopArray\n\t\tconst { type = \"BBG\" } = currentStop\n\t\tconst duration = getDuration(type)\n\t\tlet lang = \"de\"\n\t\tconst browserLang = navigator.language\n\t\tif (browserLang.startsWith(\"de\")) {\n\t\t\tlang = \"de\"\n\t\t} else {\n\t\t\tlang = \"en\"\n\t\t}\n\t\tconst url = `https://sklinkusch-vbbmicro.vercel.app/?station=${id}&duration=${duration}&language=${lang}`\n\t\tconst response = await axios.get(url)\n\t\tconst { data: resData, status } = await response\n\t\tif (status === 500 || status !== 200) {\n\t\t\tsetError(`HTTP status code: ${status}`)\n\t\t\tsetData([])\n\t\t} else {\n\t\t\tconst myDate = new Date().toLocaleString(\"de-DE\", {\n\t\t\t\tyear: \"numeric\",\n\t\t\t\tmonth: \"2-digit\",\n\t\t\t\tday: \"2-digit\",\n\t\t\t\thour: \"2-digit\",\n\t\t\t\tminute: \"2-digit\",\n\t\t\t\ttimeZone: \"Europe/Berlin\",\n\t\t\t})\n\t\t\tsetDate(myDate)\n\t\t\tsetData(resData)\n\t\t\tsetViewData(resData)\n\t\t\tsetError(null)\n\t\t}\n\t}\n\tconst handleChange = (currentStop: Stop) => {\n\t\tsetCurrStop(currentStop)\n\t\tconst { id: myStopId } = currentStop\n\t\tgetData(myStopId)\n\t\tconst inputCurrent = inputField.current as HTMLInputElement\n\t\tinputCurrent.value = \"\"\n\t\tconst filterFieldCurrent = filterField.current as HTMLInputElement\n\t\tfilterFieldCurrent.value = \"\"\n\t\tconst filterSelectorCurrent = filterSelector.current as HTMLSelectElement\n\t\tfilterSelectorCurrent.value = \"OR\"\n\t}\n\tconst handleSubmit = () => {\n\t\tgetData(stop.id)\n\t\tconst inputCurrent = inputField.current as HTMLInputElement\n\t\tinputCurrent.value = \"\"\n\t\tconst filterFieldCurrent = filterField.current as HTMLInputElement\n\t\tfilterFieldCurrent.value = \"\"\n\t\tconst filterSelectorCurrent = filterSelector.current as HTMLSelectElement\n\t\tfilterSelectorCurrent.value = \"OR\"\n\t}\n\t// useEffect(() => {\n\t//   getData(stop);\n\t// }, []);\n\treturn (\n\t\t<div className=\"timetable\" sx={{ minHeight: \"75vh\" }}>\n\t\t\t{inputField && <Input filterStops={doFilter} inputField={inputField} />}\n\t\t\t<Select\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tselection={selection}\n\t\t\t\tstop={stop}\n\t\t\t\tmode=\"dep\"\n\t\t\t/>\n\t\t\t<Button handleSubmit={handleSubmit} />\n\t\t\t<Filter\n\t\t\t\tfilterField={filterField}\n\t\t\t\tfilterSelector={filterSelector}\n\t\t\t\tfilterData={filterData}\n\t\t\t\tmode=\"dep\"\n\t\t\t/>\n\t\t\t<StopBody\n\t\t\t\tstop={stop}\n\t\t\t\tdata={viewData}\n\t\t\t\terror={error}\n\t\t\t\tdate={date}\n\t\t\t\tmode=\"dep\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","import React from \"react\"\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\"\nimport LegendDep from \"../components/LegendDep/LegendDep\"\nimport Timetable from \"../components/Timetable/Timetable\"\n// const LegendDep = lazy(() => import(\"../components/LegendDep\"))\n// const Timetable = lazy(() => import(\"../components/Timetable\"))\n\nfunction VBBDepartures() {\n  // let pathProps\n  // switch(process.env.NODE_ENV) {\n  //   case \"development\":\n  //     pathProps = { basename: process.env.PUBLIC_URL }\n  //     //  pathProps = {}\n  //     break\n  //   case \"production\":\n  //     pathProps = { basename: process.env.PUBLIC_URL }\n  //     // pathProps = {}\n  //     break\n  //   default:\n  //     pathProps = { basename: process.env.PUBLIC_URL }\n  //     // pathProps = {}\n  // }\n  return (\n    <div>\n      <LegendDep />\n      {/* <Router { ...pathProps }>\n        <Routes>\n          <Route path=\"/:stopId\" element={<Timetable />} />\n          <Route path=\"\" element={< Timetable />} />\n          <Route path=\"*\" element={< Timetable />} />\n        </Routes>\n      </Router> */}\n      <Timetable />\n    </div>\n  )\n}\n\nexport default VBBDepartures\n"],"names":["Button","handleSubmit","Fragment","onClick","sx","padding","backgroundColor","opacity","className","Filter","props","filterField","filterSelector","filterData","mode","type","placeholder","getLocale","ref","onChange","event","width","maxWidth","mx","value","Input","filterStops","inputField","Legendrow","left","right","gridColumn","textAlign","Select","handleChange","selection","stop","navigate","useNavigate","id","target","filter","length","map","index","name","LegendDep","display","gridTemplateColumns","border","margin","borderRadius","Timetable","useDebugState","stops","setSelection","setStop","data","setData","date","setDate","viewData","setViewData","error","setError","params","useParams","useEffect","hasOwnProperty","selectedStop","getData","remainingStops","stopSelection","initialStopArray","initialStop","initialId","useRef","filterOr","filterValues","filteredData","departure","decider","direction","i","line","toLowerCase","includes","filterAnd","noFilters","currentStopArray","currentStop","duration","getDuration","lang","browserLang","navigator","language","startsWith","url","axios","response","resData","status","myDate","Date","toLocaleString","year","month","day","hour","minute","timeZone","minHeight","filterValue","currStop","newSelection","myStopId","current","split","filterMode","StopBody"],"sourceRoot":""}