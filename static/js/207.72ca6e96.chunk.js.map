{"version":3,"file":"static/js/207.72ca6e96.chunk.js","mappings":"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","sources":["components/Departure/Departure.tsx"],"sourcesContent":["/** @jsxImportSource theme-ui */\nimport { Fragment, lazy } from \"react\";\nconst Time = lazy(() => import(\"../Time/Time\"));\nconst Product = lazy(() => import(\"../Product/Product\"));\nconst Barrier = lazy(() => import(\"../Barrier/Barrier\"));\nconst Bike = lazy(() => import(\"../Bike/Bike\"));\nconst Warning = lazy(() => import(\"../Warning/Warning\"));\nconst Status = lazy(() => import(\"../Status/Status\"));\nconst Warntext = lazy(() => import(\"../Warntext/Warntext\"));\nconst Stattext = lazy(() => import(\"../Stattext/Stattext\"));\n\ntype Remarks = {\n  code: string | undefined,\n  summary: string | null | undefined,\n  text: string | undefined,\n  type: string | undefined,\n  validFrom: string | undefined,\n  validUntil: string | undefined\n}[]\n\ntype Props = {\n  dep: {\n    cancelled: boolean | undefined,\n    delay: number | null,\n    direction: string | null,\n    formerScheduledWhen?: string,\n    line: {\n      express: boolean,\n      metro: boolean,\n      mode: string,\n      name: string,\n      night: boolean,\n      product: string,\n      type: string\n    },\n    plannedPlatform?: string,\n    plannedWhen?: string,\n    platform?: number | string,\n    prognosedPlatform?: string,\n    prognosisType: string | null | undefined,\n    provenance: string | null,\n    remarks: Remarks,\n    scheduledWhen?: string,\n    stop: {\n      id: string,\n      name: string,\n    },\n    tripId: string,\n    when?: string\n  }\n}\n\nexport const getDelay = (delay: number | null | undefined, cancelled: boolean | null | undefined) => {\n  if (delay != null) {\n    return Math.floor(delay / 60);\n  } else if (cancelled) {\n    return \"X\";\n  } else {\n    return \"?\";\n  }\n};\n\nexport const getPlanTime = (realtime: string, delay: number) => {\n  let hours = Number(realtime.substring(0, 2));\n  let minutes = Number(realtime.substring(3, 5));\n  minutes -= delay;\n  if (minutes < 0) {\n    minutes += 60;\n    hours -= 1;\n  }\n  if (minutes > 59) {\n    minutes -= 60;\n    hours += 1;\n  }\n  if (hours < 0) {\n    hours += 24;\n  }\n  if (hours > 23) {\n    hours -= 24;\n  }\n  let hourString = hours < 10 ? `0${hours}` : `${hours}`;\n  let minuteString = minutes < 10 ? `0${minutes}` : `${minutes}`;\n  return `${hourString}:${minuteString}`;\n};\n\nexport const getTime = (timestamp: string | undefined | null) => {\n  if (timestamp != null) {\n    return timestamp.substring(11, 16);\n  } else {\n    return \"\";\n  }\n};\n\nconst Departure = (props: Props) => {\n  let delayMin;\n  if (props.dep.cancelled) {\n    delayMin = getDelay(props.dep.delay, props.dep.cancelled);\n  } else {\n    delayMin = getDelay(props.dep.delay, false);\n  }\n  let realtime = getTime(props.dep.when);\n  let plantime;\n  if (props.dep.when != null && props.dep.delay != null) {\n    plantime = getPlanTime(realtime, Number(delayMin));\n  } else if (props.dep.when != null && delayMin === \"?\") {\n    plantime = realtime;\n    realtime = \"\";\n  } else {\n    plantime =\n      getTime(props.dep.formerScheduledWhen) ||\n      getTime(props.dep.scheduledWhen) ||\n      getTime(props.dep.plannedWhen);\n  }\n  const { line, direction, remarks, platform, plannedPlatform, prognosedPlatform } = props.dep;\n  const { name: linenumber } = line;\n  return (\n    <Fragment>\n      <div className=\"row\" key={props.dep.tripId} sx={{ display: \"grid\", gridTemplateColumns: \"repeat(24,1fr)\" }}>\n        <Time time={plantime} class=\"plantime\" />\n        <Time time={realtime} class=\"realtime\" />\n        <div className=\"delay\" sx={{ textAlign: [\"center\", \"center\", \"right\"], gridColumn: [\"17 / span 8\", \"5 / span 2\"]}}>{delayMin}</div>\n        <Product line={line} />\n        <div className=\"line\" sx={{ textAlign: \"left\", gridColumn: [\"2 / span 6\", \"8 / span 3\"] }}>{linenumber}</div>\n        <div className=\"direction\" sx={{ textAlign: \"left\", gridColumn: [\"8 / span 13\", \"11 / span 8\"] }}>{direction}</div>\n        <div className=\"platform\" sx={{ textAlign: \"center\", gridColumn: [\"22 / span 3\", \"19 / span 2\"] }}>{platform || plannedPlatform || prognosedPlatform}</div>\n        <Barrier remarks={remarks} />\n        <Bike remarks={remarks} />\n        <Warning remarks={remarks} />\n        <Status remarks={remarks} />\n      </div>\n      <div className=\"row row-add\" key={`add:${props.dep.tripId}`} sx={{ display: \"grid\", gridTemplateColumns: \"repeat(24, 1fr)\", borderBottom: [\"1px solid #ccc\", \"1px solid #ccc\",\"none\"] }}>\n        <Warntext remarks={remarks} />\n        <Stattext remarks={remarks} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Departure;\n"],"names":["Time","lazy","Product","Barrier","Bike","Warning","Status","Warntext","Stattext","getDelay","delay","cancelled","Math","floor","getPlanTime","realtime","hours","Number","substring","minutes","hourString","minuteString","getTime","timestamp","props","delayMin","dep","plantime","when","formerScheduledWhen","scheduledWhen","plannedWhen","line","direction","remarks","platform","plannedPlatform","prognosedPlatform","linenumber","name","Fragment","className","sx","display","gridTemplateColumns","time","class","textAlign","gridColumn","tripId","borderBottom"],"sourceRoot":""}