{"version":3,"file":"static/js/619.a6f505b3.chunk.js","mappings":"gRAkBaA,EAAa,SAACC,GACzB,GAAkB,OAAdA,QAAoCC,IAAdD,EAAyB,CACjD,IAAME,EAAYF,EAAUG,UAAU,EAAG,IAAIC,MAAM,KACnD,UAA2BF,EAA3B,GAAOG,EAAP,KAAaC,EAAb,KAAoBC,EAApB,KACMC,EAAOR,EAAUG,UAAU,GAAI,IACrC,MAAM,GAAN,OAAUI,EAAV,YAAiBD,EAAjB,YAA0BD,EAA1B,aAAmCG,GAErC,OAAO,MAGIC,EAAa,SAACC,GACzB,GAAoB,kBAATA,EAAmB,CAC5B,IAAMC,EAAmBC,EAAaF,GAEtC,OADsBG,EAAoBF,GAG5C,MAAO,IAGIC,EAAe,SAACE,GAC3B,GAAoB,kBAATA,EAAmB,CAC5B,GAAI,0BAA0BC,KAAKD,GAAO,CAExC,OAAOA,EAAKE,QADI,qCACa,WAEjC,OAAOF,EAET,OAAOA,GAGMD,EAAsB,SAACH,GAClC,GAAoB,kBAATA,EAAmB,CAC5B,IACIO,EADkBP,EAAKM,QAAQ,aAAc,KAClBA,QAAQ,QAAS,KAEhD,OADAC,EAAWA,EAASD,QAAQ,QAAS,KAGvC,OAAON,GA4BT,UAzBgB,SAAC,GAAwB,IACjCQ,EADgC,EAArBC,QACQC,QAAO,SAACC,GAAD,MAA4B,YAAhBA,EAAOC,QAC7CC,EAAoBL,EACvBM,KAAI,SAACC,GACJ,IAAMC,EAAO3B,EAAW0B,EAAQE,WAC1BC,EAAQ7B,EAAW0B,EAAQI,YAC3BC,EAAUrB,EAAWgB,EAAQK,SAC7BpB,EAAOD,EAAWgB,EAAQf,MAChC,MAAM,GAAN,OAAUgB,GAAc,GAAxB,cAAgCE,GAAgB,GAAhD,aACEE,GAAoB,GADtB,aAEKpB,GAAc,OAEpBqB,KAAK,MACR,OACE,eAAKC,UAAU,UAAUC,GAAI,CAAEC,UAAW,SAAUC,WAAY,CAAC,cAAe,gBAAhF,SACGjB,EAASkB,OAAS,GACjB,gBACEJ,UAAU,8BACVK,MAAOd,IAEP","sources":["components/Warning/Warning.tsx"],"sourcesContent":["/** @jsxImportSource theme-ui */\n\ntype Remarks = {\n  summary: string | null | undefined,\n  text: string | undefined,\n  type: string | undefined,\n  validFrom: string | undefined,\n  validUntil: string | undefined\n}[]\n\ntype Props = {\n  remarks: Remarks\n}\n\ntype Timestamp = string | null | undefined\n\ntype Text = string | null | undefined\n\nexport const formatTime = (timestamp: Timestamp) => {\n  if (timestamp !== null && timestamp !== undefined) {\n    const dateArray = timestamp.substring(0, 10).split(\"-\")\n    const [year, month, day] = dateArray\n    const time = timestamp.substring(11, 16)\n    return `${day}.${month}.${year}, ${time}`\n  }\n  return null\n}\n\nexport const formatText = (text: Text) => {\n  if (typeof text === 'string') {\n    const textWithoutLinks = replaceLinks(text)\n    const formattedText = includeSpecialChars(textWithoutLinks)\n    return formattedText\n  }\n  return \"\"\n}\n\nexport const replaceLinks = (item: Text) => {\n  if (typeof item === 'string') {\n    if (/<a.*href=\".*\".*>.*<\\/a>/.test(item)) {\n      const pattern = /<a.*href=\"([\\w:/.]*)\".*>(.*)<\\/a>/g\n      return item.replace(pattern, \"$2 ($1)\")\n    }\n  return item\n  }\nreturn item\n}\n\nexport const includeSpecialChars = (text: Text) => {\n  if (typeof text === 'string') {\n    let textWODoubleBrs = text.replace(/(\\[br\\]*)/g, \" \")\n    let textForm = textWODoubleBrs.replace(/&lt;/g, \"<\")\n    textForm = textForm.replace(/&gt;/g, \">\")\n    return textForm\n  }\n  return text\n}\n\nconst Warning = ({ remarks }: Props) => {\n  const warnings = remarks.filter((remark) => remark.type === \"warning\")\n  const formattedWarnings = warnings\n    .map((warning) => {\n      const from = formatTime(warning.validFrom)\n      const until = formatTime(warning.validUntil)\n      const summary = formatText(warning.summary)\n      const text = formatText(warning.text)\n      return `${from ? from : \"\"} - ${until ? until : \"\"}: ${\n        summary ? summary : \"\"\n      }, ${text ? text : \"\"}`\n    })\n    .join(\"\\n\")\n  return (\n    <div className=\"warning\" sx={{ textAlign: \"center\", gridColumn: [\"13 / span 6\", \"23 / span 1\"]}}>\n      {warnings.length > 0 ? (\n        <span\n          className=\"fas fa-exclamation-triangle\"\n          title={formattedWarnings}\n        />\n      ) : null}\n    </div>\n  )\n}\n\nexport default Warning\n"],"names":["formatTime","timestamp","undefined","dateArray","substring","split","year","month","day","time","formatText","text","textWithoutLinks","replaceLinks","includeSpecialChars","item","test","replace","textForm","warnings","remarks","filter","remark","type","formattedWarnings","map","warning","from","validFrom","until","validUntil","summary","join","className","sx","textAlign","gridColumn","length","title"],"sourceRoot":""}