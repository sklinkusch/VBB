{"version":3,"file":"static/js/619.54b1943e.chunk.js","mappings":"mNAkBO,MAAMA,EAAcC,IAC1B,GAAkB,OAAdA,QAAoCC,IAAdD,EAAyB,CAClD,MAAME,EAAYF,EAAUG,UAAU,EAAG,IAAIC,MAAM,MAC5CC,EAAMC,EAAOC,GAAOL,EACrBM,EAAOR,EAAUG,UAAU,GAAI,IACrC,MAAM,GAANM,OAAUF,EAAG,KAAAE,OAAIH,EAAK,KAAAG,OAAIJ,EAAI,MAAAI,OAAKD,EACpC,CACA,OAAO,IAAI,EAGCE,EAAcC,IAC1B,GAAoB,kBAATA,EAAmB,CAC7B,MAAMC,EAAmBC,EAAaF,GAEtC,OADsBG,EAAoBF,EAE3C,CACA,MAAO,EAAE,EAGGC,EAAgBE,IAC5B,GAAoB,kBAATA,EAAmB,CAC7B,GAAI,0BAA0BC,KAAKD,GAAO,CACzC,MAAME,EAAU,qCAChB,OAAOF,EAAKG,QAAQD,EAAS,UAC9B,CACA,OAAOF,CACR,CACA,OAAOA,CAAI,EAGCD,EAAuBH,IACnC,GAAoB,kBAATA,EAAmB,CAC7B,IACIQ,EADkBR,EAAKO,QAAQ,aAAc,KAClBA,QAAQ,QAAS,KAEhD,OADAC,EAAWA,EAASD,QAAQ,QAAS,KAC9BC,CACR,CACA,OAAOR,CAAI,EAmCZ,EAhCgBS,IAAyB,IAAxB,QAAEC,GAAgBD,EAClC,MAAME,EAAWD,EAAQE,QAAQC,GAA2B,YAAhBA,EAAOC,OAC7CC,EAAoBJ,EACxBK,KAAKC,IACL,MAAMC,EAAO9B,EAAW6B,EAAQE,WAC1BC,EAAQhC,EAAW6B,EAAQI,YAC3BC,EAAUvB,EAAWkB,EAAQK,SAC7BtB,EAAOD,EAAWkB,EAAQjB,MAChC,MAAM,GAANF,OAAUoB,GAAc,GAAE,OAAApB,OAAMsB,GAAgB,GAAE,MAAAtB,OACjDwB,GAAoB,GAAE,MAAAxB,OAClBE,GAAc,GAAE,IAErBuB,KAAK,MACP,OACCC,EAAAA,EAAAA,IAAA,OACCC,UAAU,UACVC,GAAI,CACHC,UAAW,SACXC,WAAY,CAAC,cAAe,cAAe,eAC3CC,GAAI,GACHC,SAEDnB,EAASoB,OAAS,GAClBP,EAAAA,EAAAA,IAAA,QACCC,UAAU,8BACVO,MAAOjB,IAEL,MACC,C","sources":["components/Warning/Warning.tsx"],"sourcesContent":["/** @jsxImportSource theme-ui */\n\ntype Remarks = {\n\tsummary: string | null | undefined\n\ttext: string | undefined\n\ttype: string | undefined\n\tvalidFrom: string | undefined\n\tvalidUntil: string | undefined\n}[]\n\ntype Props = {\n\tremarks: Remarks\n}\n\ntype Timestamp = string | null | undefined\n\ntype Text = string | null | undefined\n\nexport const formatTime = (timestamp: Timestamp) => {\n\tif (timestamp !== null && timestamp !== undefined) {\n\t\tconst dateArray = timestamp.substring(0, 10).split(\"-\")\n\t\tconst [year, month, day] = dateArray\n\t\tconst time = timestamp.substring(11, 16)\n\t\treturn `${day}.${month}.${year}, ${time}`\n\t}\n\treturn null\n}\n\nexport const formatText = (text: Text) => {\n\tif (typeof text === \"string\") {\n\t\tconst textWithoutLinks = replaceLinks(text)\n\t\tconst formattedText = includeSpecialChars(textWithoutLinks)\n\t\treturn formattedText\n\t}\n\treturn \"\"\n}\n\nexport const replaceLinks = (item: Text) => {\n\tif (typeof item === \"string\") {\n\t\tif (/<a.*href=\".*\".*>.*<\\/a>/.test(item)) {\n\t\t\tconst pattern = /<a.*href=\"([\\w:/.]*)\".*>(.*)<\\/a>/g\n\t\t\treturn item.replace(pattern, \"$2 ($1)\")\n\t\t}\n\t\treturn item\n\t}\n\treturn item\n}\n\nexport const includeSpecialChars = (text: Text) => {\n\tif (typeof text === \"string\") {\n\t\tlet textWODoubleBrs = text.replace(/(\\[br\\]*)/g, \" \")\n\t\tlet textForm = textWODoubleBrs.replace(/&lt;/g, \"<\")\n\t\ttextForm = textForm.replace(/&gt;/g, \">\")\n\t\treturn textForm\n\t}\n\treturn text\n}\n\nconst Warning = ({ remarks }: Props) => {\n\tconst warnings = remarks.filter((remark) => remark.type === \"warning\")\n\tconst formattedWarnings = warnings\n\t\t.map((warning) => {\n\t\t\tconst from = formatTime(warning.validFrom)\n\t\t\tconst until = formatTime(warning.validUntil)\n\t\t\tconst summary = formatText(warning.summary)\n\t\t\tconst text = formatText(warning.text)\n\t\t\treturn `${from ? from : \"\"} - ${until ? until : \"\"}: ${\n\t\t\t\tsummary ? summary : \"\"\n\t\t\t}, ${text ? text : \"\"}`\n\t\t})\n\t\t.join(\"\\n\")\n\treturn (\n\t\t<div\n\t\t\tclassName=\"warning\"\n\t\t\tsx={{\n\t\t\t\ttextAlign: \"center\",\n\t\t\t\tgridColumn: [\"11 / span 5\", \"11 / span 5\", \"23 / span 1\"],\n\t\t\t\tpx: 0,\n\t\t\t}}\n\t\t>\n\t\t\t{warnings.length > 0 ? (\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"fas fa-exclamation-triangle\"\n\t\t\t\t\ttitle={formattedWarnings}\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t)\n}\n\nexport default Warning\n"],"names":["formatTime","timestamp","undefined","dateArray","substring","split","year","month","day","time","concat","formatText","text","textWithoutLinks","replaceLinks","includeSpecialChars","item","test","pattern","replace","textForm","_ref","remarks","warnings","filter","remark","type","formattedWarnings","map","warning","from","validFrom","until","validUntil","summary","join","_jsx","className","sx","textAlign","gridColumn","px","children","length","title"],"sourceRoot":""}